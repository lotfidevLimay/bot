{"version":3,"file":"server.js","mappings":"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","sources":["webpack://cockpitbot/./src/server/TeamsAppsComponents.ts?6a42","webpack://cockpitbot/./src/server/cockpitBotBot/DemoBotBot.ts?6a20","webpack://cockpitbot/./src/server/cockpitBotBot/cards/welcomeCard.ts?433a","webpack://cockpitbot/./src/server/cockpitBotBot/dialogBot.ts?bd15","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/helpDialog.ts?ecd9","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/mainDialog.ts?3abf","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/mentionUserDialog.ts?bdf4","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/teamsInfoDialog.ts?503f","webpack://cockpitbot/./src/server/cockpitBotBot/cards/helpCard.js?9093","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/mock.js?460d","webpack://cockpitbot/./src/server/cockpitBotBot/dialogs/utils.js?5c4d","webpack://cockpitbot/external commonjs \"botbuilder\"?9bd5","webpack://cockpitbot/external commonjs \"botbuilder-dialogs\"?0e7e","webpack://cockpitbot/external commonjs \"compression\"?e0c2","webpack://cockpitbot/external commonjs \"debug\"?b525","webpack://cockpitbot/external commonjs \"dotenv\"?3fba","webpack://cockpitbot/external commonjs \"express\"?c4a6","webpack://cockpitbot/external commonjs \"express-msteams-host\"?eac2","webpack://cockpitbot/external commonjs \"morgan\"?66c0","webpack://cockpitbot/external node-commonjs \"http\"?78d4","webpack://cockpitbot/external node-commonjs \"path\"?1f34","[]","webpack://cockpitbot/webpack/runtime/compat get default export?8f79","webpack://cockpitbot/webpack/runtime/define property getters?6c9f","webpack://cockpitbot/webpack/runtime/hasOwnProperty shorthand?8bc5","webpack://cockpitbot/webpack/runtime/make namespace object?7a79","webpack://cockpitbot/./src/server/server.ts?3175"],"sourcesContent":["// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the demoBotBot bot\nexport * from \"./cockpitBotBot/DemoBotBot\";\n","import { BotDeclaration } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport { CardFactory, ConversationState, MemoryStorage, UserState, TurnContext } from \"botbuilder\";\nimport { DialogBot } from \"./dialogBot\";\nimport { MainDialog } from \"./dialogs/mainDialog\";\nimport WelcomeCard from \"./cards/welcomeCard\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\n/**\n * Implementation for Demo Bot Bot\n */\n  @BotDeclaration(\n      \"/api/messages\",\n      new MemoryStorage(),\n      // eslint-disable-next-line no-undef\n      process.env.MICROSOFT_APP_ID,\n      // eslint-disable-next-line no-undef\n      process.env.MICROSOFT_APP_PASSWORD)\n\nexport class DemoBotBot extends DialogBot {\n    constructor(conversationState: ConversationState, userState: UserState) {\n        super(conversationState, userState, new MainDialog());\n\n        this.onMembersAdded(async (context, next) => {\n            const membersAdded = context.activity.membersAdded;\n            if (membersAdded && membersAdded.length > 0) {\n                for (let cnt = 0; cnt < membersAdded.length; cnt++) {\n                    if (membersAdded[cnt].id !== context.activity.recipient.id) {\n                        await this.sendWelcomeCard( context );\n                    }\n                }\n            }\n            await next();\n        });\n    }\n\n    public async sendWelcomeCard( context: TurnContext ): Promise<void> {\n        const welcomeCard = CardFactory.adaptiveCard(WelcomeCard);\n        await context.sendActivity({ attachments: [welcomeCard] });\n    }\n\n}\n","const WelcomeCard = require(\"./welcomeCard.json\");\nexport default WelcomeCard;\n","import {\n    ConversationState,\n    UserState,\n    TeamsActivityHandler,\n    TurnContext\n} from \"botbuilder\";\nimport { MainDialog } from \"./dialogs/mainDialog\";\n\nexport class DialogBot extends TeamsActivityHandler {\n    public dialogState: any;\n\n    constructor(public conversationState: ConversationState, public userState: UserState, public dialog: MainDialog) {\n        super();\n        this.conversationState = conversationState;\n        this.userState = userState;\n        this.dialog = dialog;\n        this.dialogState = this.conversationState.createProperty(\"DialogState\");\n\n        this.onMessage(async (context, next) => {\n            // Run the MainDialog with the new message Activity.\n            await this.dialog.run(context, this.dialogState);\n            await next();\n        });\n\n        this.onMessageReaction(async (context, next) => {\n            const added = context.activity.reactionsAdded;\n            if (added && added[0]) {\n                await context.sendActivity({\n                    textFormat: \"xml\",\n                    text: `Thanks for reacting to my message (${added[0].type})`\n                });\n            }\n        });\n    }\n\n    public async run(context: TurnContext) {\n        await super.run(context);\n        // Save any state changes. The load happened during the execution of the Dialog.\n        await this.conversationState.saveChanges(context, false);\n        await this.userState.saveChanges(context, false);\n    }\n}\n","import {\n    ComponentDialog,\n    DialogSet,\n    DialogState,\n    DialogTurnResult,\n    DialogTurnStatus,\n    TextPrompt,\n    WaterfallDialog,\n    WaterfallStepContext\n} from \"botbuilder-dialogs\";\nimport {\n    ActivityTypes,\n    CardFactory,\n    MessageFactory,\n    StatePropertyAccessor,\n    TurnContext\n} from \"botbuilder\";\n\nimport HelpCard from \"../cards/helpCard\";\n\nconst HELP_DIALOG_ID = \"helpDialog\";\nconst HELP_WATERFALL_DIALOG_ID = \"helpWaterfallDialog\";\n\nexport class HelpDialog extends ComponentDialog {\n    constructor() {\n        super(HELP_DIALOG_ID);\n        this.addDialog(new TextPrompt(\"TextPrompt\"))\n            .addDialog(new WaterfallDialog(HELP_WATERFALL_DIALOG_ID, [\n                this.introStep.bind(this)\n            ]));\n        this.initialDialogId = HELP_WATERFALL_DIALOG_ID;\n    }\n\n    public async run(context: TurnContext, accessor: StatePropertyAccessor<DialogState>) {\n        const dialogSet = new DialogSet(accessor);\n        dialogSet.add(this);\n        const dialogContext = await dialogSet.createContext(context);\n        const results = await dialogContext.continueDialog();\n        if (results.status === DialogTurnStatus.empty) {\n            await dialogContext.beginDialog(this.id);\n        }\n    }\n\n    private async introStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        const card = CardFactory.adaptiveCard(\n            HelpCard\n        );\n        const replyActivity = { type: ActivityTypes.Message, attachments: [card] };\n        await stepContext.context.sendActivity(replyActivity);\n        return await stepContext.endDialog();\n\n    }\n}\n","import {\n    ComponentDialog,\n    DialogSet,\n    DialogState,\n    DialogTurnResult,\n    DialogTurnStatus,\n    TextPrompt,\n    WaterfallDialog,\n    WaterfallStepContext\n} from \"botbuilder-dialogs\";\nimport {\n    MessageFactory,\n    StatePropertyAccessor,\n    InputHints,\n    TurnContext,\n    AttachmentLayoutTypes\n} from \"botbuilder\";\nimport { TeamsInfoDialog } from \"./teamsInfoDialog\";\nimport { HelpDialog } from \"./helpDialog\";\nimport { MentionUserDialog } from \"./mentionUserDialog\";\nimport { getDataByCommandId } from \"./mock\";\nimport { textCommands, getCard } from \"./utils\";\n\nconst MAIN_DIALOG_ID = \"mainDialog\";\nconst MAIN_WATERFALL_DIALOG_ID = \"mainWaterfallDialog\";\n\nexport class MainDialog extends ComponentDialog {\n    public onboarding: boolean;\n    constructor() {\n        super(MAIN_DIALOG_ID);\n        this.addDialog(new TextPrompt(\"TextPrompt\"))\n            .addDialog(new TeamsInfoDialog())\n            .addDialog(new HelpDialog())\n            .addDialog(new MentionUserDialog())\n            .addDialog(new WaterfallDialog(MAIN_WATERFALL_DIALOG_ID, [\n                this.introStep.bind(this),\n                this.actStep.bind(this),\n                this.finalStep.bind(this)\n            ]));\n        this.initialDialogId = MAIN_WATERFALL_DIALOG_ID;\n        this.onboarding = false;\n    }\n\n    public async run(context: TurnContext, accessor: StatePropertyAccessor<DialogState>) {\n        const dialogSet = new DialogSet(accessor);\n        dialogSet.add(this);\n        const dialogContext = await dialogSet.createContext(context);\n        const results = await dialogContext.continueDialog();\n        if (results.status === DialogTurnStatus.empty) {\n            await dialogContext.beginDialog(this.id);\n        }\n    }\n\n    private async introStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        if ((stepContext.options as any).restartMsg) {\n            const messageText = (stepContext.options as any).restartMsg ? (stepContext.options as any).restartMsg : \"What can I help you with today?\";\n            const promptMessage = MessageFactory.text(messageText, messageText, InputHints.ExpectingInput);\n            return await stepContext.prompt(\"TextPrompt\", { prompt: promptMessage });\n        } else {\n            this.onboarding = true;\n            return await stepContext.next();\n        }\n    }\n\n    private async actStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        if (stepContext.result) {\n            /*\n            ** This is where you would add LUIS to your bot, see this link for more information:\n            ** https://docs.microsoft.com/en-us/azure/bot-service/bot-builder-howto-v4-luis?view=azure-bot-service-4.0&tabs=javascript\n            */\n            const result = stepContext.result.trim().toLocaleLowerCase();\n            if (textCommands.includes(result)) {\n                const response = getDataByCommandId(result);\n                await stepContext.context.sendActivity(getCard(response, result));\n            } else {\n                switch (result) {\n                    case \"who\" :\n                    case \"who am i?\": {\n                        return await stepContext.beginDialog(\"teamsInfoDialog\");\n                    }\n                    case \"get help\":\n                    case \"help\": {\n                        return await stepContext.beginDialog(\"helpDialog\");\n                    }\n                    case \"mention me\":\n                    case \"mention\": {\n                        return await stepContext.beginDialog(\"mentionUserDialog\");\n                    }\n                    case \"call api\":\n                    case \"api\": {\n                        return await stepContext.beginDialog(\"externalApiDialog\");\n                    }\n                    default: {\n                        await stepContext.context.sendActivity(\"Ok, maybe next time 😉\");\n                        return await stepContext.next();\n                    }\n                }\n            }\n\n        } else if (this.onboarding) {\n            const result = stepContext.context.activity.text.trim().toLocaleLowerCase();\n            if (textCommands.includes(result)) {\n                const response = getDataByCommandId(result);\n                await stepContext.context.sendActivity(getCard(response, result));\n            } else {\n                switch (result) {\n                    case \"who\": {\n                        return await stepContext.beginDialog(\"teamsInfoDialog\");\n                    }\n                    case \"help\": {\n                        return await stepContext.beginDialog(\"helpDialog\");\n                    }\n                    case \"mention\": {\n                        return await stepContext.beginDialog(\"mentionUserDialog\");\n                    }\n                    case \"api\": {\n                        return await stepContext.beginDialog(\"externalApiDialog\");\n                    }\n                    default: {\n                        await stepContext.context.sendActivity(\"Ok, maybe next time 😉\");\n                        return await stepContext.next();\n                    }\n\n                }\n            }\n\n        }\n        return await stepContext.next();\n    }\n\n    private async finalStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        // return await stepContext.replaceDialog(this.initialDialogId, { restartMsg: \"What else can I do for you?\" });\n        return await stepContext.endDialog(this.initialDialogId);\n    }\n}\n","import {\n    ComponentDialog,\n    DialogSet,\n    DialogState,\n    DialogTurnResult,\n    DialogTurnStatus,\n    TextPrompt,\n    WaterfallDialog,\n    WaterfallStepContext\n} from \"botbuilder-dialogs\";\nimport {\n    MessageFactory,\n    StatePropertyAccessor,\n    TurnContext\n} from \"botbuilder\";\n\nconst MENTION_DIALOG_ID = \"mentionUserDialog\";\nconst MENTION_WATERFALL_DIALOG_ID = \"mentionUserWaterfallDialog\";\n\nexport class MentionUserDialog extends ComponentDialog {\n    constructor() {\n        super(MENTION_DIALOG_ID);\n        this.addDialog(new TextPrompt(\"TextPrompt\"))\n            .addDialog(new WaterfallDialog(MENTION_WATERFALL_DIALOG_ID, [\n                this.introStep.bind(this)\n            ]));\n        this.initialDialogId = MENTION_WATERFALL_DIALOG_ID;\n    }\n\n    public async run(context: TurnContext, accessor: StatePropertyAccessor<DialogState>) {\n        const dialogSet = new DialogSet(accessor);\n        dialogSet.add(this);\n        const dialogContext = await dialogSet.createContext(context);\n        const results = await dialogContext.continueDialog();\n        if (results.status === DialogTurnStatus.empty) {\n            await dialogContext.beginDialog(this.id);\n        }\n    }\n\n    private async introStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        const mention = {\n            mentioned: stepContext.context.activity.from,\n            text: `<at>${new TextEncoder().encode(stepContext.context.activity.from.name)}</at>`,\n            type: \"mention\"\n        };\n        const replyActivity = MessageFactory.text(`Hi ${mention.text}`);\n        replyActivity.entities = [mention];\n        await stepContext.context.sendActivity(replyActivity);\n        return await stepContext.endDialog();\n    }\n}\n","import {\n    ComponentDialog,\n    DialogSet,\n    DialogState,\n    DialogTurnResult,\n    DialogTurnStatus,\n    TextPrompt,\n    WaterfallDialog,\n    WaterfallStepContext\n} from \"botbuilder-dialogs\";\nimport {\n    MessageFactory,\n    StatePropertyAccessor,\n    TeamsInfo,\n    TurnContext\n} from \"botbuilder\";\n\nconst TEAMS_INFO_DIALOG_ID = \"teamsInfoDialog\";\nconst TEAMS_INFO_WATERFALL_DIALOG_ID = \"teamsInfoWaterfallDialog\";\nlet teamsUserInfo;\n\nexport class TeamsInfoDialog extends ComponentDialog {\n    constructor() {\n        super(TEAMS_INFO_DIALOG_ID);\n        this.addDialog(new TextPrompt(\"TextPrompt\"))\n            .addDialog(new WaterfallDialog(TEAMS_INFO_WATERFALL_DIALOG_ID, [\n                this.introStep.bind(this),\n                this.actStep.bind(this),\n                this.finalStep.bind(this)\n            ]));\n        this.initialDialogId = TEAMS_INFO_WATERFALL_DIALOG_ID;\n    }\n\n    public async run(context: TurnContext, accessor: StatePropertyAccessor<DialogState>) {\n        const dialogSet = new DialogSet(accessor);\n        dialogSet.add(this);\n        const dialogContext = await dialogSet.createContext(context);\n        const results = await dialogContext.continueDialog();\n        if (results.status === DialogTurnStatus.empty) {\n            await dialogContext.beginDialog(this.id);\n        }\n    }\n\n    private async introStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        const promptMessage = MessageFactory.text(\"Do you want me to send you the current Teams member info?\\n\\nSay **yes** if you do like to see the context or **no** if you don't\");\n        return await stepContext.prompt(\"TextPrompt\", { prompt: promptMessage });\n    }\n\n    private async actStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        if (stepContext.result) {\n            const result = stepContext.result;\n            switch (result) {\n                case \"yes\": {\n                    teamsUserInfo = await TeamsInfo.getMember(stepContext.context, stepContext.context.activity.from.id);\n                    await stepContext.context.sendActivity(`Your name: **${teamsUserInfo.name}**\\n\\nYour Teams ID: **${teamsUserInfo.id}**\\n\\nYour email: **${teamsUserInfo.email}**`);\n                    break;\n                }\n                default: {\n                    await stepContext.context.sendActivity(\"Ok, maybe next time 😉\");\n                    return await stepContext.next();\n                }\n            }\n        }\n        return await stepContext.next();\n    }\n\n    private async finalStep(stepContext: WaterfallStepContext): Promise<DialogTurnResult> {\n        await stepContext.context.sendActivity(\"Now it's time to add more functionality to your bot, so head over to the [docs](https://aka.ms/yoTeams) and start building\");\n        return await stepContext.endDialog();\n    }\n}\n","export default {\n    $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n    version: \"1.0\",\n    type: \"AdaptiveCard\",\n    speak: \"Your flight is confirmed for you and 3 other passengers from San Francisco to Amsterdam on Friday, October 10 8:30 AM\",\n    msteams: { width: \"Full\" },\n    body: [\n        {\n            type: \"TextBlock\",\n            text: \"Command list\",\n            weight: \"bolder\",\n            isSubtle: false\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get info \\\"ap24563\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the features of the app code\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get inc \\\"ap24563\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the open incident of the code ap\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get inc last \\\"ap24563\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the latest incidents in the app code from the last 90 days\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get info \\\"inc (priority: P1)\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the details of the incident by priority\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get chg \\\"ap24563\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the open change of the code ap\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: \"1\",\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get chg last \\\"ap24563\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the latest changes in the app code from the last 90 days\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get info \\\"chg (Id)\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the details of the chnage by id\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            type: \"ColumnSet\",\n            spacing: \"medium\",\n            columns: [\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            text: \"get info \\\"server (Id)\\\"\",\n                            size: \"medium\",\n                            weight: \"bolder\",\n                            isSubtle: true\n                        }\n                    ]\n                },\n                {\n                    type: \"Column\",\n                    width: 1,\n                    items: [\n                        {\n                            type: \"TextBlock\",\n                            horizontalAlignment: \"left\",\n                            text: \"List the details of the server by id\",\n                            size: \"default\",\n                            weight: \"lighter\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n};\n","const incidents = [\n    {\n        id: \"INC6213608\",\n        priority: \"P2\",\n        state: \"New\",\n        shortDescription: \"Les utilisateurs ne reçoivent plus de notifications dans l'application mobile\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 11:52\",\n        closedAt: null,\n        cmdbCiId: \"401f102f1b24e810704d8055464bcbe3\"\n    },\n    {\n        id: \"INC6213606\",\n        priority: \"P3\",\n        state: \"New\",\n        shortDescription: \"Le serveur semble down, il est inaccessible (SRV001)\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 10:20\",\n        closedAt: null,\n        cmdbCiId: \"14fcc1fe1be424100e2940c1b24bcb6e\"\n    },\n    {\n        id: \"INC6213607\",\n        priority: \"P4\",\n        state: \"New\",\n        shortDescription: \"Lenteur serveur, le seuil d'usage du CPU est dépassé\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 12:00\",\n        closedAt: null,\n        cmdbCiId: \"36d9013e1b6424100e2940c1b24bcb8e\"\n    }\n];\n\nconst lastIncidents = [\n    {\n        id: \"INC6213607\",\n        priority: \"P4\",\n        state: \"New\",\n        shortDescription: \"Lenteur serveur, le seuil d'usage du CPU est dépassé\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 12:00\",\n        closedAt: null,\n        cmdbCiId: \"36d9013e1b6424100e2940c1b24bcb8e\"\n    },\n\n    {\n        id: \"INC6213608\",\n        priority: \"P2\",\n        state: \"New\",\n        shortDescription: \"Les utilisateurs ne reçoivent plus de notifications dans l'application mobile\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 11:52\",\n        closedAt: null,\n        cmdbCiId: \"401f102f1b24e810704d8055464bcbe3\"\n    },\n    {\n        id: \"INC6213606\",\n        priority: \"P3\",\n        state: \"New\",\n        shortDescription: \"Le serveur semble down, il est inaccessible (SRV001)\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        openedAt: \"24/08/2023 At 10:20\",\n        closedAt: null,\n        cmdbCiId: \"14fcc1fe1be424100e2940c1b24bcb6e\"\n    }\n];\n\nconst changes = [\n    {\n        id: \"CHG0537388\",\n        type: \"Normal\",\n        state: \"Implement\",\n        openedAt: \"24/08/2023 At 14:00\",\n        closedAt: null,\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33 sur le server SRV001\",\n        cmdbCiId: \"2371f55187ecb0d0eb9033fd3fbb352d\",\n        server: \"SRV001\"\n    },\n    {\n        id: \"CHG0537386\",\n        type: \"Normal\",\n        state: \"Closed\",\n        openedAt: \"24/08/2023 At 18:00\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33\",\n        cmdbCiId: \"14fcc1fe1be424100e2940c1b24bcb6e\",\n        server: \"SRV001\"\n\n    },\n    {\n        id: \"CHG0537387\",\n        type: \"Normal\",\n        state: \"New\",\n        openedAt: \"24/08/2023 At 16:00\",\n        closedAt: null,\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33\",\n        cmdbCiId: \"36d9013e1b6424100e2940c1b24bcb8e\",\n        server: \"SRV001\"\n    }\n];\n\nconst lastChanges = [\n    {\n        id: \"CHG0537386\",\n        type: \"Normal\",\n        state: \"Closed\",\n        openedAt: \"24/08/2023 At 18:00\",\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33\",\n        cmdbCiId: \"14fcc1fe1be424100e2940c1b24bcb6e\",\n        server: \"SRV001\"\n    },\n    {\n        id: \"CHG0537387\",\n        type: \"Normal\",\n        state: \"New\",\n        openedAt: \"24/08/2023 At 16:00\",\n        closedAt: null,\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33\",\n        cmdbCiId: \"36d9013e1b6424100e2940c1b24bcb8e\",\n        server: \"SRV001\"\n    },\n    {\n        id: \"CHG0537388\",\n        type: \"Normal\",\n        state: \"Implement\",\n        openedAt: \"24/08/2023 At 14:00\",\n        closedAt: null,\n        group: \"bnpp itgp data cockpit\",\n        service: \"AP24563 -- COCKPIT-ITG\",\n        shortDescription: \"Déploiement patch sécurité RHEL-Lot 1-S33\",\n        cmdbCiId: \"2371f55187ecb0d0eb9033fd3fbb352d\",\n        server: \"SRV001\"\n    }\n];\n\nconst getIncidentByPriority = (priority) => {\n    const result = priority.trim().toLocaleLowerCase();\n    return incidents.find(item => item.priority.trim().toLocaleLowerCase() === result);\n};\n\nconst getChangeById = (id) => {\n    const result = id.trim().toLocaleLowerCase();\n    return changes.find(item => item.id.trim().toLocaleLowerCase() === result);\n};\n\nexport const commands = [\n    {\n        id: \"get info \\\"ap24563\\\"\",\n        data: {\n            id: \"AP24563\",\n            name: \"AP24563 -- COCKPIT-ITG\",\n            label: \"COCKPIT-ITG\",\n            owner: \"Fabrice LE DEIT\",\n            responsible: \"David ELIASZ\",\n            group: \"BNPP_ITGP_DATA_COCKPIT\",\n            description: \"Cockpit is an IT Operations Analytics product offering an interactive data visualisation tool on incidents to facilitate investigations, It is an advanced reporting offering muli dimensional views: Applications, Metiers, Teams, Time.\"\n        },\n        type: \"application\",\n        mode: \"one\"\n    },\n    {\n        id: \"get info \\\"server (SRV001)\\\"\",\n        data: {\n            id: \"SRV001\",\n            label: \"SRV001 -- SERVER-ITG\",\n            group: \"BNPP_ITGP_DATA_COCKPIT\",\n            processor: \"AMD\",\n            time: \"0 Days, 6 Hours and 43 Minutes\",\n            hostname: \"S01123456789\",\n            provisor: \"BP2I\",\n            infra: \"IBM\",\n            infratype: \"DMZR_IAAS_VMW\",\n            ownertype: \"DAT -ITGP\",\n            code: \"AP24563\",\n            osdomaine: \"linux\",\n            osversion:'7.9',\n            operatingsys:\"RHEL\",\n        },\n        type: \"server\",\n        mode: \"one\"\n    },\n    {\n        id: \"get inc \\\"ap24563\\\"\",\n        data: incidents,\n        type: \"incident\"\n    },\n    {\n        id: \"get inc last \\\"ap24563\\\"\",\n        data: lastIncidents,\n        type: \"incident\",\n        mode: \"multiple\"\n    },\n    {\n        id: \"get info \\\"inc (P2)\\\"\",\n        data: getIncidentByPriority(\"P2\"),\n        type: \"incident\",\n        mode: \"one\"\n    },\n    {\n        id: \"get info \\\"inc (P3)\\\"\",\n        data: getIncidentByPriority(\"P3\"),\n        type: \"incident\",\n        mode: \"one\"\n    },\n    {\n        id: \"get info \\\"inc (P4)\\\"\",\n        data: getIncidentByPriority(\"P4\"),\n        type: \"incident\",\n        mode: \"one\"\n    },\n    {\n        id: \"get chg \\\"ap24563\\\"\",\n        data: changes.filter(item => item.state === \"Implement\"),\n        type: \"change\",\n        mode: \"multiple\"\n    },\n    {\n        id: \"get chg last \\\"ap24563\\\"\",\n        data: lastChanges,\n        type: \"change\",\n        mode: \"multiple\"\n    },\n    {\n        id: \"get info \\\"chg (CHG0537386)\\\"\",\n        data: getChangeById(\"CHG0537386\"),\n        type: \"change\",\n        mode: \"one\"\n    },\n    {\n        id: \"get info \\\"chg (CHG0537387)\\\"\",\n        data: getChangeById(\"CHG0537387\"),\n        type: \"change\",\n        mode: \"one\"\n\n    },\n    {\n        id: \"get info \\\"chg (CHG0537388)\\\"\",\n        data: getChangeById(\"CHG0537388\"),\n        type: \"change\",\n        mode: \"one\"\n    }\n];\nexport const getDataByCommandId = (id) => {\n    const result = id.trim().toLocaleLowerCase();\n    return commands.find(item => item.id.trim().toLocaleLowerCase() === result);\n};\n","import {\n    CardFactory,\n    AttachmentLayoutTypes\n} from \"botbuilder\";\n\nexport const textCommands = [\n    \"get info \\\"ap24563\\\"\",\n    \"get inc \\\"ap24563\\\"\",\n    \"get inc last \\\"ap24563\\\"\",\n    \"get info \\\"inc (p2)\\\"\",\n    \"get info \\\"inc (p3)\\\"\",\n    \"get info \\\"inc (p4)\\\"\",\n    \"get chg \\\"ap24563\\\"\",\n    \"get chg last \\\"ap24563\\\"\",\n    \"get info \\\"chg (chg0537386)\\\"\",\n    \"get info \\\"chg (chg0537387)\\\"\",\n    \"get info \\\"chg (chg0537388)\\\"\",\n    \"get info \\\"chg (chg0537388)\\\"\",\n    \"get info \\\"server (srv001)\\\"\"\n];\n\nconst getApplication = (data) => {\n    return {\n        msteams: { width: \"Full\" },\n        type: \"AdaptiveCard\",\n        body: [\n            {\n                type: \"Container\",\n                items: [\n                    {\n                        type: \"ColumnSet\",\n                        columns: [\n                            {\n                                type: \"Column\",\n                                width: \"100px\",\n                                items: [\n                                    {\n                                        type: \"TextBlock\",\n                                        text: \"Label\",\n                                        wrap: true,\n                                        weight: \"Bolder\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: \"Owner\",\n                                        wrap: true,\n                                        weight: \"Bolder\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: \"IT Responsible\",\n                                        wrap: true,\n                                        weight: \"Bolder\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: \"Group\",\n                                        wrap: true,\n                                        weight: \"Bolder\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: \"Description\",\n                                        wrap: true,\n                                        weight: \"Bolder\"\n                                    }\n                                ]\n                            },\n                            {\n                                type: \"Column\",\n                                items: [\n                                    {\n                                        type: \"TextBlock\",\n                                        text: data.label\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: data.owner,\n                                        wrap: true\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: data.responsible\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: data.group,\n                                        wrap: true\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        text: data.description,\n                                        wrap: true\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n        version: \"1.6\",\n        fallbackText: \"This card requires Adaptive Cards v1.5 support to be rendered properly.\"\n    };\n};\n\nconst getServer = (data) => {\n    return {\n        msteams: { width: \"Full\" },\n        type: \"AdaptiveCard\",\n        body: [\n            {\n                type: \"Container\",\n                items: [\n                    {\n                        type: \"FactSet\",\n                        spacing: \"Padding\",\n                        facts: [\n                            {\n                                title: \"Server Id\",\n                                value: data.id\n                            },\n                            {\n                                title: \"Code AP\",\n                                value: data.code\n                            },\n                            {\n                                title: \"Host Name\",\n                                value: data.hostname\n                            },\n                            {\n                                title: \"Infra\",\n                                value: data.infra\n                            },\n                            {\n                                title: \"Hyper Visor Provider\",\n                                value: data.provisor\n                            },\n                            {\n                                title: \"Processor\",\n                                value: data.processor\n                            },\n                            {\n                                title: \"Owner OU Name\",\n                                value: data.ownertype\n                            },\n                            {\n                                title: \"OS Domaine\",\n                                value: data.osdomaine\n                            },\n                            {\n                                title: \"OS Version\",\n                                value: data.osversion\n                            },\n                            {\n                                title: \"Operating Systeme\",\n                                value: data.operatingsys\n                            },\n                            {\n                                title: \"label\",\n                                value: data.label\n                            },\n                            {\n                                title: \"Group\",\n                                value: data.group\n                            },\n                            {\n                                title: \"Up Time\",\n                                value: data.time\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n        version: \"1.6\",\n        fallbackText: \"This card requires Adaptive Cards v1.5 support to be rendered properly.\"\n    };\n};\n\nconst getProiorityImageById = (id) => {\n    switch (id) {\n        case \"P1\": {\n            return \"https://img.icons8.com/?size=2x&id=21181&format=png\";\n        }\n        case \"P2\": {\n            return \"https://img.icons8.com/?size=2x&id=21181&format=png\";\n        }\n        case \"P3\": {\n            return \"https://img.icons8.com/?size=2x&id=12368&format=png\";\n        }\n        case \"P4\": {\n            return \"https://img.icons8.com/?size=2x&id=21193&format=png\";\n        }\n\n    }\n};\n\nconst getStateImageById = (id) => {\n    switch (id) {\n        case \"New\": {\n            return \"https://img.icons8.com/?size=2x&id=21517&format=png\";\n        }\n        case \"Implement\": {\n            return \"https://img.icons8.com/?size=2x&id=81438&format=png\";\n        }\n        case \"Closed\": {\n            return \"https://img.icons8.com/?size=2x&id=38006&format=png\";\n        }\n    }\n};\n\nconst getIncident = (data, withDetails) => {\n    return {\n        type: \"AdaptiveCard\",\n        body: [\n            {\n                type: \"Container\",\n                style: \"emphasis\",\n                items: [\n                    {\n                        type: \"ColumnSet\",\n                        columns: [\n                            {\n                                type: \"Column\",\n                                items: [\n                                    {\n                                        type: \"TextBlock\",\n                                        size: \"Default\",\n                                        weight: \"Default\",\n                                        text: data.openedAt,\n                                        style: \"default\",\n                                        wrap: true,\n                                        fontType: \"Default\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        size: \"Default\",\n                                        weight: \"Bolder\",\n                                        text: data.id,\n                                        style: \"default\",\n                                        wrap: true,\n                                        fontType: \"Default\",\n                                        spacing: \"Small\"\n                                    }\n                                ],\n                                width: \"stretch\"\n                            },\n                            {\n                                type: \"Column\",\n                                items: [\n                                    {\n                                        type: \"ActionSet\",\n                                        actions: [\n                                            {\n                                                iconUrl: getProiorityImageById(data.priority),\n                                                type: \"Action.Submit\",\n                                                title: data.priority\n                                            }\n                                        ],\n                                        size: \"Stretch\"\n                                    }\n                                ],\n                                width: \"auto\"\n                            }\n                        ]\n                    }\n                ],\n                bleed: true\n            },\n            {\n                type: \"Container\",\n                items: [\n                    {\n                        type: \"FactSet\",\n                        spacing: \"Padding\",\n                        facts: withDetails\n                            ? [\n                                {\n                                    title: \"Group\",\n                                    value: data.group\n                                },\n                                {\n                                    title: \"Service\",\n                                    value: data.service\n                                },\n                                {\n                                    title: \"Short description\",\n                                    value: data.shortDescription\n                                }\n                            ]\n                            : [\n                                {\n                                    title: \"Group\",\n                                    value: data.group\n                                },\n                                {\n                                    title: \"Service\",\n                                    value: data.service\n                                }\n                            ]\n                    }\n                ]\n            }\n        ],\n        $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n        version: \"1.6\",\n        fallbackText: \"This card requires Adaptive Cards v1.5 support to be rendered properly.\"\n    };\n};\n\nconst getChange = (data, withDetails) => {\n    return {\n        type: \"AdaptiveCard\",\n        body: [\n            {\n                type: \"Container\",\n                style: \"emphasis\",\n                items: [\n                    {\n                        type: \"ColumnSet\",\n                        columns: [\n                            {\n                                type: \"Column\",\n                                items: [\n                                    {\n                                        type: \"TextBlock\",\n                                        size: \"Default\",\n                                        weight: \"Default\",\n                                        text: data.openedAt,\n                                        style: \"default\",\n                                        wrap: true,\n                                        fontType: \"Default\"\n                                    },\n                                    {\n                                        type: \"TextBlock\",\n                                        size: \"Default\",\n                                        weight: \"Bolder\",\n                                        text: data.id,\n                                        style: \"default\",\n                                        wrap: true,\n                                        fontType: \"Default\",\n                                        spacing: \"Small\"\n                                    }\n                                ],\n                                width: \"stretch\"\n                            },\n                            {\n                                type: \"Column\",\n                                items: [\n                                    {\n                                        type: \"ActionSet\",\n                                        actions: [\n                                            {\n                                                iconUrl: getStateImageById(data.state),\n                                                type: \"Action.Submit\",\n                                                title: data.state\n                                            }\n                                        ],\n                                        size: \"Stretch\"\n                                    }\n                                ],\n                                width: \"auto\"\n                            }\n                        ]\n                    }\n                ],\n                bleed: true\n            },\n            {\n                type: \"Container\",\n                items: [\n                    {\n                        type: \"FactSet\",\n                        spacing: \"Padding\",\n                        facts: withDetails\n                            ? [\n                                {\n                                    title: \"Group\",\n                                    value: data.group\n                                },\n                                {\n                                    title: \"Service\",\n                                    value: data.service\n                                },\n                                {\n                                    title: \"Short description\",\n                                    value: data.shortDescription\n                                }\n                            ]\n                            : [\n                                {\n                                    title: \"Group\",\n                                    value: data.group\n                                },\n                                {\n                                    title: \"Service\",\n                                    value: data.service\n                                },\n                            ]\n                    }\n                ]\n            }\n        ],\n        $schema: \"http://adaptivecards.io/schemas/adaptive-card.json\",\n        version: \"1.6\",\n        fallbackText: \"This card requires Adaptive Cards v1.5 support to be rendered properly.\"\n    };\n};\n\nexport const getCard = (response, command) => {\n    const type = response.type;\n    const mode = response.mode;\n    const data = response.data;\n    const withDetails = command.includes(\"info\");\n    let attachment;\n    if (type === \"incident\") {\n        if (mode === \"one\") {\n            attachment = {\n                attachments: [CardFactory.adaptiveCard(getIncident(data, withDetails))]\n            };\n        } else {\n            const cards = [];\n            data.forEach(item => {\n                cards.push(CardFactory.adaptiveCard(getIncident(item, withDetails)));\n            });\n            attachment = {\n                attachments: cards,\n                attachmentLayout: AttachmentLayoutTypes.Carousel\n            };\n        }\n    }\n    if (type === \"change\") {\n        if (mode === \"one\") {\n            attachment = {\n                attachments: [CardFactory.adaptiveCard(getChange(data, withDetails))]\n            };\n        } else {\n            const cards = [];\n            data.forEach(item => {\n                cards.push(CardFactory.adaptiveCard(getChange(item, withDetails)));\n            });\n            attachment = {\n                attachments: cards,\n                attachmentLayout: AttachmentLayoutTypes.Carousel\n            };\n        }\n    }\n    if (type === \"application\") {\n        attachment = {\n            attachments: [CardFactory.adaptiveCard(getApplication(data))]\n        };\n    }\n    if (type === \"server\") {\n        attachment = {\n            attachments: [CardFactory.adaptiveCard(getServer(data))]\n        };\n    }\n    return attachment;\n\n};\n","module.exports = require(\"botbuilder\");","module.exports = require(\"botbuilder-dialogs\");","module.exports = require(\"compression\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(\"Initializing Microsoft Teams Express hosted App...\");\n\n// Initialize dotenv, to use .env file settings if existing\nrequire(\"dotenv\").config();\n\n// The import of components has to be done AFTER the dotenv config\n// eslint-disable-next-line import/first\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n"],"names":["nonce","debug","DemoBotBot","DialogBot","constructor","conversationState","userState","super","MainDialog","this","onMembersAdded","context","next","membersAdded","activity","length","cnt","id","recipient","sendWelcomeCard","welcomeCard","CardFactory","adaptiveCard","sendActivity","attachments","BotDeclaration","MemoryStorage","process","env","MICROSOFT_APP_ID","MICROSOFT_APP_PASSWORD","WelcomeCard","TeamsActivityHandler","dialog","dialogState","createProperty","onMessage","run","onMessageReaction","added","reactionsAdded","textFormat","text","type","saveChanges","HELP_WATERFALL_DIALOG_ID","HelpDialog","ComponentDialog","addDialog","TextPrompt","WaterfallDialog","introStep","bind","initialDialogId","accessor","dialogSet","DialogSet","add","dialogContext","createContext","continueDialog","status","DialogTurnStatus","empty","beginDialog","stepContext","card","replyActivity","ActivityTypes","Message","endDialog","MAIN_WATERFALL_DIALOG_ID","TeamsInfoDialog","MentionUserDialog","actStep","finalStep","onboarding","options","restartMsg","messageText","promptMessage","MessageFactory","InputHints","ExpectingInput","prompt","result","trim","toLocaleLowerCase","textCommands","includes","response","getDataByCommandId","getCard","MENTION_WATERFALL_DIALOG_ID","mention","mentioned","from","TextEncoder","encode","name","entities","TEAMS_INFO_WATERFALL_DIALOG_ID","teamsUserInfo","TeamsInfo","getMember","email","$schema","version","speak","msteams","width","body","weight","isSubtle","spacing","columns","items","size","horizontalAlignment","incidents","priority","state","shortDescription","group","service","openedAt","closedAt","cmdbCiId","changes","server","getIncidentByPriority","find","item","getChangeById","commands","data","label","owner","responsible","description","mode","processor","time","hostname","provisor","infra","infratype","ownertype","code","osdomaine","osversion","operatingsys","filter","getApplication","wrap","fallbackText","getServer","facts","title","value","getProiorityImageById","getStateImageById","getIncident","withDetails","style","fontType","actions","iconUrl","bleed","getChange","command","attachment","cards","forEach","push","attachmentLayout","AttachmentLayoutTypes","Carousel","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","log","express","Express","port","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen"],"sourceRoot":""}