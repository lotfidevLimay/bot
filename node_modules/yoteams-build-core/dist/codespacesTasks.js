"use strict";
// Copyright (c) Wictor WilÃ©n. All rights reserved.
// Licensed under the MIT license.
// SPDX-License-Identifier: MIT
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.codespacesTasks = void 0;
const fancy_log_1 = __importDefault(require("fancy-log"));
const _1 = require(".");
const fs_extra_1 = __importDefault(require("fs-extra"));
const chalk_1 = __importDefault(require("chalk"));
const argv = require("yargs").argv;
/**
 * Registers tasks for Github Codespaces
 * @param gulp Gulp object
 * @param config configuration - not used
 */
const codespacesTasks = (gulp, config) => {
    if (process.env.CODESPACES) {
        try {
            // only register code spaces tasks when in Github Codespaces
            const codespaceEnvConfig = "/workspaces/.codespaces/shared/environment-variables.json";
            const codespaceEnv = fs_extra_1.default.readJSONSync(codespaceEnvConfig);
            const codespaceName = codespaceEnv.CODESPACE_NAME;
            process.env.PUBLIC_HOSTNAME = `${codespaceName}-${process.env.PORT}.githubpreview.dev`;
            (0, fancy_log_1.default)("[Codespace] Public url: " + process.env.PUBLIC_HOSTNAME);
            gulp.task("codespaces-serve", (0, _1.dependencies)(gulp, "codespaces-serve", "manifest", "serve"));
        }
        catch (ex) {
            (0, fancy_log_1.default)(chalk_1.default.red(`Unable to set up Codespaces tasks: ${ex}`));
        }
    }
};
exports.codespacesTasks = codespacesTasks;
