"use strict";
// Copyright (c) Wictor WilÃ©n. All rights reserved.
// Licensed under the MIT license.
// SPDX-License-Identifier: MIT
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.styleTasks = void 0;
const gulp_plumber_1 = __importDefault(require("gulp-plumber"));
const autoprefixer_1 = __importDefault(require("autoprefixer"));
const gulp_if_1 = __importDefault(require("gulp-if"));
const gulp_sourcemaps_1 = __importDefault(require("gulp-sourcemaps"));
const sass_1 = __importDefault(require("sass"));
const gulp_sass_1 = __importDefault(require("gulp-sass"));
const gulp_postcss_1 = __importDefault(require("gulp-postcss"));
const _1 = require(".");
const argv = require("yargs").argv;
const sass = (0, gulp_sass_1.default)(sass_1.default);
const styleTasks = (gulp, config) => {
    const debug = argv.debug !== undefined;
    const styles = () => {
        (0, _1.trackEvent)("styles");
        return gulp.src("src/public/**/*.scss")
            .pipe((0, gulp_plumber_1.default)())
            .pipe((0, gulp_if_1.default)(debug, gulp_sourcemaps_1.default.init()))
            .pipe(sass.sync({
            outputStyle: debug ? "expanded" : "compressed",
            includePaths: ["."]
        }).on("error", sass.logError))
            .pipe((0, gulp_postcss_1.default)([
            (0, autoprefixer_1.default)()
        ]))
            .pipe((0, gulp_if_1.default)(debug, gulp_sourcemaps_1.default.write()))
            .pipe(gulp.dest("dist/web"));
    };
    gulp.task("styles", styles);
};
exports.styleTasks = styleTasks;
