{"version":3,"sources":["components/Portal/PortalInner.tsx"],"names":["PortalInner","props","children","mountNode","React","useContext","PortalContext","className","target","rtl","box","container","document","body","ReactDOM","createPortal","propTypes","commonPropTypes","createCommon","accessibility","as","content","styled","customPropTypes","domNode","onMount","PropTypes","func","onUnmount"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAqBA;AACA;AACA;AACO,IAAMA,WAAuC,GAAG,SAA1CA,WAA0C,CAAAC,KAAK,EAAI;AAC9D,MAAQC,QAAR,GAAgCD,KAAhC,CAAQC,QAAR;AAAA,MAAkBC,SAAlB,GAAgCF,KAAhC,CAAkBE,SAAlB;;AAEA,0BAAsBC,KAAK,CAACC,UAAN,CAAiBC,4BAAjB,CAAtB;AAAA,MAAQC,SAAR,qBAAQA,SAAR;;AACA,0BAAwB,sCAAxB;AAAA,MAAQC,MAAR,qBAAQA,MAAR;AAAA,MAAgBC,GAAhB,qBAAgBA,GAAhB;;AAEA,MAAMC,GAAG,GAAG,gCAAa;AAAEH,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,MAAM,EAANA,MAAb;AAAqBC,IAAAA,GAAG,EAAHA;AAArB,GAAb,CAAZ,CAN8D,CAO9D;AACA;;AACA,MAAME,SAA6B,GAAG,0BAAcR,SAAS,IAAIO,GAAb,IAAoBE,QAAQ,CAACC,IAA3C,GAAkD,IAAxF;AAEA,gDAA0B,YAAM;AAC9B,0BAASZ,KAAT,EAAgB,SAAhB,EAA2BA,KAA3B;AAEA,WAAO;AAAA,aAAM,sBAASA,KAAT,EAAgB,WAAhB,EAA6BA,KAA7B,CAAN;AAAA,KAAP;AACD,GAJD,EAIG,EAJH;AAMA,SAAOU,SAAS,iBAAIG,QAAQ,CAACC,YAAT,CAAsBb,QAAtB,EAAgCS,SAAhC,CAApB;AACD,CAlBM;;;AAoBPX,WAAW,CAACgB,SAAZ,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,aAAa,EAAE,KADe;AAE9BC,EAAAA,EAAE,EAAE,KAF0B;AAG9Bb,EAAAA,SAAS,EAAE,KAHmB;AAI9Bc,EAAAA,OAAO,EAAE,KAJqB;AAK9BC,EAAAA,MAAM,EAAE;AALsB,CAA7B,CADL;AAQEnB,EAAAA,SAAS,EAAEoB,eAAe,CAACC,OAR7B;AASEC,EAAAA,OAAO,EAAEC,SAAS,CAACC,IATrB;AAUEC,EAAAA,SAAS,EAAEF,SAAS,CAACC;AAVvB","sourcesContent":["import { useFluentContext, useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { isBrowser, ChildrenComponentProps, commonPropTypes } from '../../utils';\nimport { PortalContext } from '../Provider/portalContext';\nimport { usePortalBox } from './usePortalBox';\n\nexport interface PortalInnerProps extends ChildrenComponentProps {\n  /** Existing element the portal should be bound to. */\n  mountNode?: HTMLElement;\n\n  /**\n   * Called when the portal is mounted on the DOM\n   *\n   * @param data - All props.\n   */\n  onMount?: (props: PortalInnerProps) => void;\n\n  /**\n   * Called when the portal is unmounted from the DOM\n   *\n   * @param data - All props.\n   */\n  onUnmount?: (props: PortalInnerProps) => void;\n}\n\n/**\n * A PortalInner is a container for Portal's content.\n */\nexport const PortalInner: React.FC<PortalInnerProps> = props => {\n  const { children, mountNode } = props;\n\n  const { className } = React.useContext(PortalContext);\n  const { target, rtl } = useFluentContext();\n\n  const box = usePortalBox({ className, target, rtl });\n  // PortalInner should render elements even without a context\n  // eslint-disable-next-line\n  const container: HTMLElement | null = isBrowser() ? mountNode || box || document.body : null;\n\n  useIsomorphicLayoutEffect(() => {\n    _.invoke(props, 'onMount', props);\n\n    return () => _.invoke(props, 'onUnmount', props);\n  }, []);\n\n  return container && ReactDOM.createPortal(children, container);\n};\n\nPortalInner.propTypes = {\n  ...commonPropTypes.createCommon({\n    accessibility: false,\n    as: false,\n    className: false,\n    content: false,\n    styled: false,\n  }),\n  mountNode: customPropTypes.domNode,\n  onMount: PropTypes.func,\n  onUnmount: PropTypes.func,\n};\n"],"file":"PortalInner.js"}