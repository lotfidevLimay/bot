{"version":3,"sources":["mergeThemes.ts"],"names":["callable","isEnabled","isDebugEnabled","deepmerge","objectKeyToValues","withDebugId","emptyTheme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","mergeComponentStyles__PROD","stylesA","stylesB","result","Object","keys","forEach","partName","slotA","slotB","mergedStyleFunction","styleParam","mergeComponentStyles__DEV","mergedKeys","slotName","_debug","undefined","styles","debugId","_debugId","debugA","resolvedStylesA","debugB","resolvedStylesB","merged","concat","mergeComponentStyles","process","env","NODE_ENV","mergeComponentVariables__PROD","variablesA","variablesB","mergedComponentVariables","resolvedVariablesA","resolvedVariablesB","mergeComponentVariables__DEV","initial","reduce","acc","next","accumulatedVariables","computedDebug","computedComponentVariables","resolved","input","_invertedKeys","mergeComponentVariables","mergeSiteVariables__PROD","siteVariablesA","siteVariablesB","mergeSiteVariables__DEV","accumulatedSiteVariables","nextSiteVariables","key","mergeSiteVariables","mergeThemeVariables__PROD","themeComponentVariablesA","themeComponentVariablesB","displayNames","displayName","fromEntries","entries","map","variables","mergeThemeVariables__DEV","mergeThemeVariables","mergeThemeStyles__PROD","themeComponentStylesA","themeComponentStylesB","themeComponentStyles","mergeThemeStyles__DEV","componentStylesA","componentStylesB","stylesByPart","mergeThemeStyles","mergeFontFaces","fontFacesA","fontFacesB","mergeStaticStyles","staticStylesA","staticStylesB","mergeAnimations","animationsA","animationsB","mergeStyles","sources","args","mergeThemes","themeA","themeB","debugIdA","debugIdB"],"mappings":";;;;;;;;;;;;;;AAEA,SAASA,QAAT,QAAyB,YAAzB;AAqBA,SAASC,SAAS,IAAIC,cAAtB,QAA4C,gBAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,OAAO,IAAMC,UAAyB,GAAG;AACvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GADwB;AAIvCC,EAAAA,kBAAkB,EAAE,EAJmB;AAKvCC,EAAAA,eAAe,EAAE,EALsB;AAMvCC,EAAAA,SAAS,EAAE,EAN4B;AAOvCC,EAAAA,YAAY,EAAE,EAPyB;AAQvCC,EAAAA,UAAU,EAAE;AAR2B,CAAlC,C,CAWP;AACA;AACA;;AAEA;AACA;AACA;;AACA,OAAO,IAAMC,0BAAuD,GAAG,SAA1DA,0BAA0D,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC3F,MAAMC,MAAM,GAAG,EAAf;;AAEA,MAAIF,OAAJ,EAAa;AACXG,IAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,OAArB,CAA6B,UAAAC,QAAQ,EAAI;AACvC,UAAMC,KAAK,GAAGP,OAAO,CAACM,QAAD,CAArB;AACA,UAAME,KAAK,GAAGP,OAAH,oBAAGA,OAAO,CAAGK,QAAH,CAArB,CAFuC,CAIvC;;AACA,UAAI,OAAOC,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA9C,EAAoD;AAClD;AACD,OAPsC,CASvC;AACA;;;AACA,UAAI,OAAOC,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA9C,EAAoD;AAClDN,QAAAA,MAAM,CAACI,QAAD,CAAN,GAAmB,OAAOC,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsC;AAAA,iBAAMA,KAAN;AAAA,SAAzD;AACA;AACD;;AAED,UAAIA,KAAK,KAAKC,KAAd,EAAqB;AACnBN,QAAAA,MAAM,CAACI,QAAD,CAAN,GAAmB,OAAOC,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsC;AAAA,iBAAMA,KAAN;AAAA,SAAzD;AACD;AACF,KAnBD;AAoBD;;AAED,MAAIN,OAAJ,EAAa;AACXE,IAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,UAAAC,QAAQ,EAAI;AACvC,UAAMC,KAAK,GAAGP,OAAH,oBAAGA,OAAO,CAAGM,QAAH,CAArB;AACA,UAAME,KAAK,GAAGP,OAAO,CAACK,QAAD,CAArB,CAFuC,CAIvC;;AACA,UAAI,OAAOE,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA9C,EAAoD;AAClD;AACD,OAPsC,CASvC;AACA;;;AACA,UAAI,OAAOD,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,IAA9C,EAAoD;AAClDL,QAAAA,MAAM,CAACI,QAAD,CAAN,GAAmB,OAAOE,KAAP,KAAiB,UAAjB,GAA8BA,KAA9B,GAAsC;AAAA,iBAAMA,KAAN;AAAA,SAAzD;AACA;AACD;;AAED,UAAID,KAAK,KAAKC,KAAd,EAAqB;AACnB;AACD,OAlBsC,CAoBvC;;;AACAN,MAAAA,MAAM,CAACI,QAAD,CAAN,GAAmB,SAASG,mBAAT,CAA6BC,UAA7B,EAAyC;AAC1D;AACA,eAAO,OACL,OAAOH,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACG,UAAD,CAAnC,GAAkDH,KAD7C,EAEL,OAAOC,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACE,UAAD,CAAnC,GAAkDF,KAF7C,CAAP;AAID,OAND;AAOD,KA5BD;AA6BD;;AAED,SAAON,MAAP;AACD,CA3DM;AA6DP,OAAO,IAAMS,yBAAsD,GAAG,SAAzDA,yBAAyD,CAACX,OAAD,EAAUC,OAAV,EAAsB;AAC1F,MAAI,CAACd,cAAL,EAAqB;AACnB,WAAOY,0BAA0B,CAACC,OAAD,EAAUC,OAAV,CAAjC;AACD;;AAED,MAAMW,UAAU,aAAQZ,OAAO,GAAGG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAH,GAA0B,EAAzC,EAAkDC,OAAO,GAAGE,MAAM,CAACC,IAAP,CAAYH,OAAZ,CAAH,GAA0B,EAAnF,CAAhB;AACA,MAAMC,MAAM,GAAG,EAAf;AAEAU,EAAAA,UAAU,CAACP,OAAX,CAAmB,UAAAQ,QAAQ,EAAI;AAC7B,QAAMN,KAAK,GAAG,SAARA,KAAQ,CAAAG,UAAU,EAAI;AAC1B,iBAA0CzB,QAAQ,CAACe,OAAD,oBAACA,OAAO,CAAGa,QAAH,CAAR,CAAR,CAA8BH,UAA9B,KAA6C,EAAvF;AAAA,6BAAQI,MAAR;AAAA,UAAQA,MAAR,4BAAiBC,SAAjB;AAAA,UAA+BC,MAA/B,kDAD0B,CAG1B;;;AACA,+BACKA,MADL;AAEEF,QAAAA,MAAM,EAAEA,MAAM,IAAI,CAAC;AAAEE,UAAAA,MAAM,oBAAOA,MAAP,CAAR;AAAyBC,UAAAA,OAAO,EAAEjB,OAAF,oBAAEA,OAAO,CAAEkB;AAA3C,SAAD;AAFpB;AAID,KARD;;AAUA,QAAMV,KAAK,GAAG,SAARA,KAAQ,CAAAE,UAAU,EAAI;AAC1B,kBAA0CzB,QAAQ,CAACgB,OAAD,oBAACA,OAAO,CAAGY,QAAH,CAAR,CAAR,CAA8BH,UAA9B,KAA6C,EAAvF;AAAA,+BAAQI,MAAR;AAAA,UAAQA,MAAR,6BAAiBC,SAAjB;AAAA,UAA+BC,MAA/B,oDAD0B,CAG1B;;;AACA,+BACKA,MADL;AAEEF,QAAAA,MAAM,EAAEA,MAAM,IAAI,CAAC;AAAEE,UAAAA,MAAM,oBAAOA,MAAP,CAAR;AAAyBC,UAAAA,OAAO,EAAEhB,OAAF,oBAAEA,OAAO,CAAEiB;AAA3C,SAAD;AAFpB;AAID,KARD;;AAUA,QAAIlB,OAAO,QAAP,IAAAA,OAAO,CAAGa,QAAH,CAAP,IAAuBZ,OAAvB,YAAuBA,OAAO,CAAGY,QAAH,CAAlC,EAAgD;AAC9C;AACAX,MAAAA,MAAM,CAACW,QAAD,CAAN,GAAmB,UAAAH,UAAU,EAAI;AAC/B;AACA,qBAA+CH,KAAK,CAACG,UAAD,CAApD;AAAA,YAAgBS,MAAhB,UAAQL,MAAR;AAAA,YAA2BM,eAA3B;;AACA,qBAA+CZ,KAAK,CAACE,UAAD,CAApD;AAAA,YAAgBW,MAAhB,UAAQP,MAAR;AAAA,YAA2BQ,eAA3B;;AAEA,YAAMC,MAAM,GAAG,OAAQH,eAAR,EAAyBE,eAAzB,CAAf;;AAEAC,QAAAA,MAAM,CAACT,MAAP,GAAgBK,MAAM,CAACK,MAAP,CAAcH,MAAM,IAAI;AAAEL,UAAAA,MAAM,EAAEM,eAAV;AAA2BL,UAAAA,OAAO,EAAEK,eAAe,CAACJ;AAApD,SAAxB,CAAhB;AAEA,eAAOK,MAAP;AACD,OAVD;AAWD,KAbD,MAaO,IAAIvB,OAAJ,YAAIA,OAAO,CAAGa,QAAH,CAAX,EAAyB;AAC9BX,MAAAA,MAAM,CAACW,QAAD,CAAN,GAAmBN,KAAnB;AACD,KAFM,MAEA,IAAIN,OAAJ,YAAIA,OAAO,CAAGY,QAAH,CAAX,EAAyB;AAC9BX,MAAAA,MAAM,CAACW,QAAD,CAAN,GAAmBL,KAAnB;AACD;AACF,GAvCD;AAyCA,SAAON,MAAP;AACD,CAlDM;AAoDP,OAAO,IAAMuB,oBAGmB,GAC9BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC7B,0BAAxC,GAAqEY,yBAJhE;AAMP;AACA;AACA;;AACA,OAAO,IAAMkB,6BAA6B,GAAG,SAAhCA,6BAAgC,CAC3CC,UAD2C,EAE3CC,UAF2C,EAGZ;AAC/B,MAAID,UAAU,IAAIC,UAAlB,EAA8B;AAC5B,WAAO,SAASC,wBAAT,CACLxC,aADK,EAEqB;AAC1B,UAAMyC,kBAAkB,GAAG,OAAOH,UAAP,KAAsB,UAAtB,GAAmCA,UAAU,CAACtC,aAAD,CAA7C,GAA+DsC,UAAU,IAAI,EAAxG;AACA,UAAMI,kBAAkB,GAAG,OAAOH,UAAP,KAAsB,UAAtB,GAAmCA,UAAU,CAACvC,aAAD,CAA7C,GAA+DuC,UAAU,IAAI,EAAxG;AAEA,aAAO3C,SAAS,CAAC6C,kBAAD,EAAqBC,kBAArB,CAAhB;AACD,KAPD;AAQD;;AAED,MAAIJ,UAAJ,EAAgB;AACd,WAAO,OAAOA,UAAP,KAAsB,UAAtB,GAAmCA,UAAnC,GAAgD;AAAA,aAAMA,UAAU,IAAI,EAApB;AAAA,KAAvD;AACD;;AAED,MAAIC,UAAJ,EAAgB;AACd,WAAO,OAAOA,UAAP,KAAsB,UAAtB,GAAmCA,UAAnC,GAAgD;AAAA,aAAMA,UAAU,IAAI,EAApB;AAAA,KAAvD;AACD;;AAED,SAAO;AAAA,WAAO,EAAP;AAAA,GAAP;AACD,CAxBM;AA0BP,OAAO,IAAMI,4BAAkE,GAAG,SAArEA,4BAAqE,CAChFL,UADgF,EAEhFC,UAFgF,EAGjD;AAC/B,MAAI,CAAC5C,cAAL,EAAqB;AACnB,WAAO0C,6BAA6B,CAACC,UAAD,EAAaC,UAAb,CAApC;AACD;;AACD,MAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAO,EAAP;AAAA,GAAhB;;AAEA,SAAO,CAACN,UAAD,EAAaC,UAAb,EAAyBM,MAAzB,CAA4D,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChF,WAAO,UAAA/C,aAAa,EAAI;AACtB,iBAAiD8C,GAAG,CAAC9C,aAAD,CAApD;AAAA,6BAAQsB,MAAR;AAAA,UAAQA,MAAR,4BAAiB,EAAjB;AAAA,UAAwB0B,oBAAxB;;AACA,kBACEvD,QAAQ,CAACsD,IAAD,CAAR,CAAe/C,aAAf,KAAiC,EADnC;AAAA,+BAAQsB,MAAR;AAAA,UAAgB2B,aAAhB,6BAAgC1B,SAAhC;AAAA,iCAA2CG,QAA3C;AAAA,UAA2CA,QAA3C,+BAAsDH,SAAtD;AAAA,UAAoE2B,0BAApE;;AAGA,UAAMnB,MAAM,GAAGnC,SAAS,CAACoD,oBAAD,EAAuBE,0BAAvB,CAAxB;AAEAnB,MAAAA,MAAM,CAACT,MAAP,GAAgBA,MAAM,CAACU,MAAP,CACdiB,aAAa,IAAI;AACfE,QAAAA,QAAQ,EAAED,0BADK;AAEfzB,QAAAA,OAAO,EAAEC,QAFM;AAGf0B,QAAAA,KAAK,EAAEpD,aAAa,GAChBA,aAAa,CAACqD,aAAd,IAA+B5D,QAAQ,CAACsD,IAAD,CAAR,CAAe/C,aAAa,CAACqD,aAA7B,CADf,GAEhB5D,QAAQ,CAACsD,IAAD,CAAR;AALW,OADH,CAAhB;AASA,aAAOhB,MAAP;AACD,KAjBD;AAkBD,GAnBM,EAmBJa,OAnBI,CAAP;AAoBD,CA7BM;AA+BP,OAAO,IAAMU,uBAAuB,GAClCpB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCC,6BAAxC,GAAwEM,4BADnE,C,CAGP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,OAAO,IAAMY,wBAAwB,GAAG,SAA3BA,wBAA2B,CACtCC,cADsC,EAEtCC,cAFsC,EAGZ;AAC1B,MAAMb,OAA8B,GAAG;AACrC3C,IAAAA,SAAS,EAAE;AAD0B,GAAvC;;AAIA,MAAIuD,cAAc,IAAIC,cAAtB,EAAsC;AACpC,WAAO7D,SAAS,CAACgD,OAAD,EAAUY,cAAV,EAA0BC,cAA1B,CAAhB;AACD;;AAED,MAAID,cAAJ,EAAoB;AAClB,6BAAYZ,OAAZ,EAAwBY,cAAxB;AACD;;AAED,2BAAYZ,OAAZ,EAAwBa,cAAxB;AACD,CAjBM;AAmBP,OAAO,IAAMC,uBAAwD,GAAG,SAA3DA,uBAA2D,CACtEF,cADsE,EAEtEC,cAFsE,EAG5C;AAC1B,MAAI,CAAC9D,cAAL,EAAqB;AACnB,WAAO4D,wBAAwB,CAACC,cAAD,EAAiBC,cAAjB,CAA/B;AACD;;AAED,MAAMb,OAA8B,GAAG;AACrC3C,IAAAA,SAAS,EAAE;AAD0B,GAAvC;AAIA,SAAO,CAACuD,cAAD,EAAiBC,cAAjB,EAAiCZ,MAAjC,CAA+D,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnF,uBAAqDD,GAArD,CAAQxB,MAAR;AAAA,QAAQA,MAAR,6BAAiB,EAAjB;AAAA,QAAwBqC,wBAAxB,iCAAqDb,GAArD;;AACA,gBACEC,IAAI,IAAI,EADV;AAAA,6BAAQzB,MAAR;AAAA,QAAgB2B,aAAhB,6BAAgC1B,SAAhC;AAAA,oCAA2C8B,aAA3C;AAAA,QAA2CA,aAA3C,oCAA2D9B,SAA3D;AAAA,+BAAsEG,QAAtE;AAAA,QAAsEA,QAAtE,+BAAiFH,SAAjF;AAAA,QAA+FqC,iBAA/F;;AAGA,QAAM7B,MAAM,GAAGnC,SAAS,mBAAM+D,wBAAN;AAAgCN,MAAAA,aAAa,EAAE9B;AAA/C,QAA4DqC,iBAA5D,CAAxB;AACA7B,IAAAA,MAAM,CAACT,MAAP,GAAgBA,MAAM,CAACU,MAAP,CAAciB,aAAa,IAAI;AAAEE,MAAAA,QAAQ,EAAES,iBAAZ;AAA+BnC,MAAAA,OAAO,EAAEC;AAAxC,KAA/B,CAAhB;AACAK,IAAAA,MAAM,CAACsB,aAAP,GAAuBA,aAAa,IAAIxD,iBAAiB,CAACkC,MAAD,EAAS,UAAA8B,GAAG;AAAA,gCAAqBA,GAArB;AAAA,KAAZ,CAAzD;AACA,WAAO9B,MAAP;AACD,GATM,EASJa,OATI,CAAP;AAUD,CAtBM;AAwBP,OAAO,IAAMkB,kBAAkB,GAC7B5B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCmB,wBAAxC,GAAmEG,uBAD9D;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMK,yBAAyB,GAAG,SAA5BA,yBAA4B,CACvCC,wBADuC,EAEvCC,wBAFuC,EAGH;AACpC,MAAID,wBAAwB,IAAIC,wBAAhC,EAA0D;AACxD,QAAMC,YAAY,GAAG,qBAAW,KAAM,CAACF,wBAAD,EAA2BC,wBAA3B,CAAN,QAAX,CAArB;;AAEA,WAAOC,YAAY,CAACrB,MAAb,CAAoB,UAAC3C,kBAAD,EAAqBiE,WAArB,EAAqC;AAC9DjE,MAAAA,kBAAkB,CAACiE,WAAD,CAAlB,GAAkCb,uBAAuB,CACvDU,wBAAwB,CAACG,WAAD,CAD+B,EAEvDF,wBAAwB,CAACE,WAAD,CAF+B,CAAzD;AAKA,aAAOjE,kBAAP;AACD,KAPM,EAOJ,EAPI,CAAP;AAQD;;AAED,MAAI8D,wBAAJ,EAA8B;AAC5B,WAAOrD,MAAM,CAACyD,WAAP,CACLzD,MAAM,CAAC0D,OAAP,CAAeL,wBAAf,EAAyCM,GAAzC,CAA6C,iBAA8B;AAAA,UAA5BH,WAA4B;AAAA,UAAfI,SAAe;AACzE,aAAO,CAACJ,WAAD,EAAcb,uBAAuB,CAAC/B,SAAD,EAAYgD,SAAZ,CAArC,CAAP;AACD,KAFD,CADK,CAAP;AAKD;;AAED,MAAIN,wBAAJ,EAA8B;AAC5B,WAAOtD,MAAM,CAACyD,WAAP,CACLzD,MAAM,CAAC0D,OAAP,CAAeJ,wBAAf,EAAyCK,GAAzC,CAA6C,iBAA8B;AAAA,UAA5BH,WAA4B;AAAA,UAAfI,SAAe;AACzE,aAAO,CAACJ,WAAD,EAAcb,uBAAuB,CAAC/B,SAAD,EAAYgD,SAAZ,CAArC,CAAP;AACD,KAFD,CADK,CAAP;AAKD;;AAED,SAAO,EAAP;AACD,CAlCM;AAoCP,OAAO,IAAMC,wBAA0D,GAAG,SAA7DA,wBAA6D,CACxER,wBADwE,EAExEC,wBAFwE,EAGrE;AACH,MAAI,CAACtE,cAAL,EAAqB;AACnB,WAAOoE,yBAAyB,CAACC,wBAAD,EAA2BC,wBAA3B,CAAhC;AACD;;AAED,MAAMC,YAAY,GAAG,qBAAW,KAAM,CAACF,wBAAD,EAA2BC,wBAA3B,CAAN,QAAX,CAArB;;AAEA,SAAOC,YAAY,CAACrB,MAAb,CAAoB,UAAC3C,kBAAD,EAAqBiE,WAArB,EAAqC;AAC9DjE,IAAAA,kBAAkB,CAACiE,WAAD,CAAlB,GAAkCb,uBAAuB,CACvDU,wBAAwB,IAAIlE,WAAW,CAACkE,wBAAwB,CAACG,WAAD,CAAzB,EAAwCH,wBAAwB,CAACtC,QAAjE,CADgB,EAEvDuC,wBAAwB,IAAInE,WAAW,CAACmE,wBAAwB,CAACE,WAAD,CAAzB,EAAwCF,wBAAwB,CAACvC,QAAjE,CAFgB,CAAzD;AAIA,WAAOxB,kBAAP;AACD,GANM,EAMJ,EANI,CAAP;AAOD,CAjBM;AAmBP,OAAO,IAAMuE,mBAAmB,GAC9BvC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC2B,yBAAxC,GAAoES,wBAD/D;AAGP;AACA;AACA;AACA;AACA;;AACA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BC,qBAD6B,EAE7BC,qBAF6B,EAGI;AACjC,MAAID,qBAAqB,IAAIC,qBAA7B,EAAoD;AAClD,QAAMV,YAAY,GAAG,qBAAW,KAAM,CAACS,qBAAD,EAAwBC,qBAAxB,CAAN,QAAX,CAArB;;AAEA,WAAOV,YAAY,CAACrB,MAAb,CAAoB,UAACgC,oBAAD,EAAuBV,WAAvB,EAAuC;AAChEU,MAAAA,oBAAoB,CAACV,WAAD,CAApB,GAAoClC,oBAAoB,CACtD0C,qBAAqB,CAACR,WAAD,CADiC,EAEtDS,qBAAqB,CAACT,WAAD,CAFiC,CAAxD;AAKA,aAAOU,oBAAP;AACD,KAPM,EAOJ,EAPI,CAAP;AAQD;;AAED,MAAIF,qBAAJ,EAA2B;AACzB,WAAOhE,MAAM,CAACyD,WAAP,CACLzD,MAAM,CAAC0D,OAAP,CAAeM,qBAAf,EAAsCL,GAAtC,CAA0C,iBAA2B;AAAA,UAAzBH,WAAyB;AAAA,UAAZ3C,MAAY;AACnE,aAAO,CAAC2C,WAAD,EAAclC,oBAAoB,CAACV,SAAD,EAAYC,MAAZ,CAAlC,CAAP;AACD,KAFD,CADK,CAAP;AAKD;;AAED,MAAIoD,qBAAJ,EAA2B;AACzB,WAAOjE,MAAM,CAACyD,WAAP,CACLzD,MAAM,CAAC0D,OAAP,CAAeO,qBAAf,EAAsCN,GAAtC,CAA0C,iBAA2B;AAAA,UAAzBH,WAAyB;AAAA,UAAZ3C,MAAY;AACnE,aAAO,CAAC2C,WAAD,EAAclC,oBAAoB,CAACV,SAAD,EAAYC,MAAZ,CAAlC,CAAP;AACD,KAFD,CADK,CAAP;AAKD;;AAED,SAAO,EAAP;AACD,CAlCD;;AAoCA,IAAMsD,qBAAoD,GAAG,SAAvDA,qBAAuD,CAACC,gBAAD,EAAmBC,gBAAnB,EAAwC;AACnG,MAAI,CAACrF,cAAL,EAAqB;AACnB,WAAO+E,sBAAsB,CAACK,gBAAD,EAAmBC,gBAAnB,CAA7B;AACD;;AAED,MAAMpC,OAAqC,GAAG,EAA9C;AAEA,SAAO,CAACmC,gBAAD,EAAmBC,gBAAnB,EAAqCnC,MAArC,CAA0E,UAACgC,oBAAD,EAAuB9B,IAAvB,EAAgC;AAC/G,aAAUA,IAAV,EAAgB,UAACkC,YAAD,EAAed,WAAf,EAA+B;AAC7CU,MAAAA,oBAAoB,CAACV,WAAD,CAApB,GAAoClC,oBAAoB,CACtD4C,oBAAoB,CAACV,WAAD,CADkC,EAEtDrE,WAAW,CAACmF,YAAD,EAAgBlC,IAAD,CAA8DrB,QAA7E,CAF2C,CAAxD;AAID,KALD;;AAOA,WAAOmD,oBAAP;AACD,GATM,EASJjC,OATI,CAAP;AAUD,CAjBD;;AAmBA,OAAO,IAAMsC,gBAAgB,GAAGhD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCsC,sBAAxC,GAAiEI,qBAA1F;AAEP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAqCC,UAArC,EAAwF;AACpH,mBAAYD,UAAU,IAAI,EAA1B,EAAmCC,UAAU,IAAI,EAAjD;AACD,CAFM;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,aAD+B,EAE/BC,aAF+B,EAGb;AAClB,mBAAYD,aAAa,IAAI,EAA7B,EAAsCC,aAAa,IAAI,EAAvD;AACD,CALM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,WAD6B,EAE7BC,WAF6B,EAGS;AACtC,2BAAYD,WAAZ,EAA4BC,WAA5B;AACD,CALM;AAOP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAsC;AAAA,oCAAlCC,OAAkC;AAAlCA,IAAAA,OAAkC;AAAA;;AAC/D,SAAO,YAAa;AAAA,uCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAClB,WAAOD,OAAO,CAAChD,MAAR,CAAe,UAACC,GAAD,EAAMC,IAAN,EAAe;AACnC,aAAO,OAAQD,GAAR,EAAarD,QAAQ,CAACsD,IAAD,CAAR,eAAkB+C,IAAlB,CAAb,CAAP;AACD,KAFM,EAEJ,EAFI,CAAP;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACzBC,MADyB,EAEzBC,MAFyB,EAGP;AAClB,MAAMC,QAAQ,GAAGF,MAAH,oBAAGA,MAAM,CAAG,UAAH,CAAvB;AACA,MAAMG,QAAQ,GAAGF,MAAH,oBAAGA,MAAM,CAAG,UAAH,CAAvB;;AAEA,MAAID,MAAM,IAAIC,MAAd,EAAsB;AACpB,WAAO;AACL3F,MAAAA,UAAU,EAAEmF,eAAe,CAACO,MAAM,CAAC1F,UAAR,EAAoB2F,MAAM,CAAC3F,UAA3B,CADtB;AAELJ,MAAAA,kBAAkB,EAAEuE,mBAAmB,CACrC3E,WAAW,CAACkG,MAAM,CAAC9F,kBAAR,EAA4BgG,QAA5B,CAD0B,EAErCpG,WAAW,CAACmG,MAAM,CAAC/F,kBAAR,EAA4BiG,QAA5B,CAF0B,CAFlC;AAMLhG,MAAAA,eAAe,EAAE+E,gBAAgB,CAC/BpF,WAAW,CAACkG,MAAM,CAAC7F,eAAR,EAAyB+F,QAAzB,CADoB,EAE/BpG,WAAW,CAACmG,MAAM,CAAC9F,eAAR,EAAyBgG,QAAzB,CAFoB,CAN5B;AAUL/F,MAAAA,SAAS,EAAE+E,cAAc,CAACa,MAAM,CAAC5F,SAAR,EAAmB6F,MAAM,CAAC7F,SAA1B,CAVpB;AAWLJ,MAAAA,aAAa,EAAE8D,kBAAkB,CAC/BhE,WAAW,CAACkG,MAAM,CAAChG,aAAR,EAAuBkG,QAAvB,CADoB,EAE/BpG,WAAW,CAACmG,MAAM,CAACjG,aAAR,EAAuBmG,QAAvB,CAFoB,CAX5B;AAeL9F,MAAAA,YAAY,EAAEiF,iBAAiB,CAACU,MAAM,CAAC3F,YAAR,EAAsB4F,MAAM,CAAC5F,YAA7B;AAf1B,KAAP;AAiBD;;AAED,MAAI2F,MAAJ,EAAY;AACV,WAAO;AACL1F,MAAAA,UAAU,EAAEmF,eAAe,CAAClE,SAAD,EAAYyE,MAAM,CAAC1F,UAAnB,CADtB;AAELJ,MAAAA,kBAAkB,EAAEuE,mBAAmB,CAAClD,SAAD,EAAYzB,WAAW,CAACkG,MAAM,CAAC9F,kBAAR,EAA4BgG,QAA5B,CAAvB,CAFlC;AAGL/F,MAAAA,eAAe,EAAE+E,gBAAgB,CAAC3D,SAAD,EAAYzB,WAAW,CAACkG,MAAM,CAAC7F,eAAR,EAAyB+F,QAAzB,CAAvB,CAH5B;AAIL9F,MAAAA,SAAS,EAAE+E,cAAc,CAAC5D,SAAD,EAAYyE,MAAM,CAAC5F,SAAnB,CAJpB;AAKLJ,MAAAA,aAAa,EAAE8D,kBAAkB,CAACvC,SAAD,EAAYzB,WAAW,CAACkG,MAAM,CAAChG,aAAR,EAAuBkG,QAAvB,CAAvB,CAL5B;AAML7F,MAAAA,YAAY,EAAEiF,iBAAiB,CAAC/D,SAAD,EAAYyE,MAAM,CAAC3F,YAAnB;AAN1B,KAAP;AAQD;;AAED,MAAI4F,MAAJ,EAAY;AACV,WAAO;AACL3F,MAAAA,UAAU,EAAEmF,eAAe,CAAClE,SAAD,EAAY0E,MAAM,CAAC3F,UAAnB,CADtB;AAELJ,MAAAA,kBAAkB,EAAEuE,mBAAmB,CAAClD,SAAD,EAAYzB,WAAW,CAACmG,MAAM,CAAC/F,kBAAR,EAA4BiG,QAA5B,CAAvB,CAFlC;AAGLhG,MAAAA,eAAe,EAAE+E,gBAAgB,CAAC3D,SAAD,EAAYzB,WAAW,CAACmG,MAAM,CAAC9F,eAAR,EAAyBgG,QAAzB,CAAvB,CAH5B;AAIL/F,MAAAA,SAAS,EAAE+E,cAAc,CAAC5D,SAAD,EAAY0E,MAAM,CAAC7F,SAAnB,CAJpB;AAKLJ,MAAAA,aAAa,EAAE8D,kBAAkB,CAACvC,SAAD,EAAYzB,WAAW,CAACmG,MAAM,CAACjG,aAAR,EAAuBmG,QAAvB,CAAvB,CAL5B;AAML9F,MAAAA,YAAY,EAAEiF,iBAAiB,CAAC/D,SAAD,EAAY0E,MAAM,CAAC5F,YAAnB;AAN1B,KAAP;AAQD;;AAED,2BAAYN,UAAZ;AACD,CAlDM","sourcesContent":["import * as _ from 'lodash';\n\nimport { callable } from './callable';\nimport {\n  ComponentSlotStyle,\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentVariablesInput,\n  ComponentVariablesObject,\n  ComponentVariablesPrepared,\n  FontFace,\n  SiteVariablesInput,\n  SiteVariablesPrepared,\n  StaticStyle,\n  ThemeAnimation,\n  ThemeComponentStylesInput,\n  ThemeComponentStylesPrepared,\n  ThemeComponentVariablesInput,\n  ThemeComponentVariablesPrepared,\n  ThemeInput,\n  ThemePrepared,\n} from './types';\n\nimport { isEnabled as isDebugEnabled } from './debugEnabled';\nimport { deepmerge } from './deepmerge';\nimport { objectKeyToValues } from './objectKeysToValues';\nimport { withDebugId } from './withDebugId';\n\nexport const emptyTheme: ThemePrepared = {\n  siteVariables: {\n    fontSizes: {},\n  },\n  componentVariables: {},\n  componentStyles: {},\n  fontFaces: [],\n  staticStyles: [],\n  animations: {},\n};\n\n// ----------------------------------------\n// Component level merge functions\n// ----------------------------------------\n\n/**\n * Merges a single component's styles (keyed by component part) with another component's styles.\n */\nexport const mergeComponentStyles__PROD: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  const result = {};\n\n  if (stylesA) {\n    Object.keys(stylesA).forEach(partName => {\n      const slotA = stylesA[partName];\n      const slotB = stylesB?.[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotA === 'undefined' || slotA === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotB === 'undefined' || slotB === null) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n        return;\n      }\n\n      if (slotA === slotB) {\n        result[partName] = typeof slotA === 'function' ? slotA : () => slotA;\n      }\n    });\n  }\n\n  if (stylesB) {\n    Object.keys(stylesB).forEach(partName => {\n      const slotA = stylesA?.[partName];\n      const slotB = stylesB[partName];\n\n      // if there is no source, merging is a no-op, skip it\n      if (typeof slotB === 'undefined' || slotB === null) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format)\n      if (typeof slotA === 'undefined' || slotA === null) {\n        result[partName] = typeof slotB === 'function' ? slotB : () => slotB;\n        return;\n      }\n\n      if (slotA === slotB) {\n        return;\n      }\n\n      // We have both target and source, replace with merge fn\n      result[partName] = function mergedStyleFunction(styleParam) {\n        // originalTarget is always prepared, fn is guaranteed\n        return _.merge(\n          typeof slotA === 'function' ? slotA(styleParam) : slotA,\n          typeof slotB === 'function' ? slotB(styleParam) : slotB,\n        );\n      };\n    });\n  }\n\n  return result;\n};\n\nexport const mergeComponentStyles__DEV: typeof mergeComponentStyles = (stylesA, stylesB) => {\n  if (!isDebugEnabled) {\n    return mergeComponentStyles__PROD(stylesA, stylesB);\n  }\n\n  const mergedKeys = [...(stylesA ? Object.keys(stylesA) : []), ...(stylesB ? Object.keys(stylesB) : [])];\n  const result = {};\n\n  mergedKeys.forEach(slotName => {\n    const slotA = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesA?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesA?._debugId }],\n      };\n    };\n\n    const slotB = styleParam => {\n      const { _debug = undefined, ...styles } = callable(stylesB?.[slotName])(styleParam) || {};\n\n      // new object required to prevent circular JSON structure error in <Debug />\n      return {\n        ...styles,\n        _debug: _debug || [{ styles: { ...styles }, debugId: stylesB?._debugId }],\n      };\n    };\n\n    if (stylesA?.[slotName] && stylesB?.[slotName]) {\n      // We have both, replace with merge fn\n      result[slotName] = styleParam => {\n        // slot* are always prepared, fn is guaranteed, _debug always exists\n        const { _debug: debugA, ...resolvedStylesA } = slotA(styleParam);\n        const { _debug: debugB, ...resolvedStylesB } = slotB(styleParam);\n\n        const merged = _.merge(resolvedStylesA, resolvedStylesB);\n\n        merged._debug = debugA.concat(debugB || { styles: resolvedStylesB, debugId: resolvedStylesB._debugId });\n\n        return merged;\n      };\n    } else if (stylesA?.[slotName]) {\n      result[slotName] = slotA;\n    } else if (stylesB?.[slotName]) {\n      result[slotName] = slotB;\n    }\n  });\n\n  return result;\n};\n\nexport const mergeComponentStyles: (\n  stylesA: ComponentSlotStylesInput | null | undefined,\n  stylesB: ComponentSlotStylesInput | null | undefined,\n) => ComponentSlotStylesPrepared =\n  process.env.NODE_ENV === 'production' ? mergeComponentStyles__PROD : mergeComponentStyles__DEV;\n\n/**\n * Merges a single component's variables with another component's variables.\n */\nexport const mergeComponentVariables__PROD = (\n  variablesA: ComponentVariablesInput | undefined,\n  variablesB: ComponentVariablesInput | undefined,\n): ComponentVariablesPrepared => {\n  if (variablesA && variablesB) {\n    return function mergedComponentVariables(\n      siteVariables: SiteVariablesPrepared | undefined,\n    ): ComponentVariablesObject {\n      const resolvedVariablesA = typeof variablesA === 'function' ? variablesA(siteVariables) : variablesA || {};\n      const resolvedVariablesB = typeof variablesB === 'function' ? variablesB(siteVariables) : variablesB || {};\n\n      return deepmerge(resolvedVariablesA, resolvedVariablesB);\n    };\n  }\n\n  if (variablesA) {\n    return typeof variablesA === 'function' ? variablesA : () => variablesA || {};\n  }\n\n  if (variablesB) {\n    return typeof variablesB === 'function' ? variablesB : () => variablesB || {};\n  }\n\n  return () => ({});\n};\n\nexport const mergeComponentVariables__DEV: typeof mergeComponentVariables__PROD = (\n  variablesA,\n  variablesB,\n): ComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentVariables__PROD(variablesA, variablesB);\n  }\n  const initial = () => ({});\n\n  return [variablesA, variablesB].reduce<ComponentVariablesPrepared>((acc, next) => {\n    return siteVariables => {\n      const { _debug = [], ...accumulatedVariables } = acc(siteVariables);\n      const { _debug: computedDebug = undefined, _debugId = undefined, ...computedComponentVariables } =\n        callable(next)(siteVariables) || {};\n\n      const merged = deepmerge(accumulatedVariables, computedComponentVariables);\n\n      merged._debug = _debug.concat(\n        computedDebug || {\n          resolved: computedComponentVariables,\n          debugId: _debugId,\n          input: siteVariables\n            ? siteVariables._invertedKeys && callable(next)(siteVariables._invertedKeys)\n            : callable(next)(),\n        },\n      );\n      return merged;\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables =\n  process.env.NODE_ENV === 'production' ? mergeComponentVariables__PROD : mergeComponentVariables__DEV;\n\n// ----------------------------------------\n// Theme level merge functions\n// ----------------------------------------\n\n/**\n * Site variables can safely be merged at each Provider in the tree.\n * They are flat objects and do not depend on render-time values, such as props.\n */\nexport const mergeSiteVariables__PROD = (\n  siteVariablesA: SiteVariablesInput | undefined,\n  siteVariablesB: SiteVariablesInput | undefined,\n): SiteVariablesPrepared => {\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  if (siteVariablesA && siteVariablesB) {\n    return deepmerge(initial, siteVariablesA, siteVariablesB);\n  }\n\n  if (siteVariablesA) {\n    return { ...initial, ...siteVariablesA };\n  }\n\n  return { ...initial, ...siteVariablesB };\n};\n\nexport const mergeSiteVariables__DEV: typeof mergeSiteVariables__PROD = (\n  siteVariablesA,\n  siteVariablesB,\n): SiteVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeSiteVariables__PROD(siteVariablesA, siteVariablesB);\n  }\n\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  return [siteVariablesA, siteVariablesB].reduce<SiteVariablesPrepared>((acc, next) => {\n    const { _debug = [], ...accumulatedSiteVariables } = acc;\n    const { _debug: computedDebug = undefined, _invertedKeys = undefined, _debugId = undefined, ...nextSiteVariables } =\n      next || {};\n\n    const merged = deepmerge({ ...accumulatedSiteVariables, _invertedKeys: undefined }, nextSiteVariables);\n    merged._debug = _debug.concat(computedDebug || { resolved: nextSiteVariables, debugId: _debugId });\n    merged._invertedKeys = _invertedKeys || objectKeyToValues(merged, key => `siteVariables.${key}`);\n    return merged;\n  }, initial);\n};\n\nexport const mergeSiteVariables =\n  process.env.NODE_ENV === 'production' ? mergeSiteVariables__PROD : mergeSiteVariables__DEV;\n\n/**\n * Component variables can be objects, functions, or an array of these.\n * The functions must be called with the final result of siteVariables, otherwise\n *   the component variable objects would have no ability to apply siteVariables.\n * Therefore, componentVariables must be resolved by the component at render time.\n * We instead pass down call stack of component variable functions to be resolved later.\n */\n\nexport const mergeThemeVariables__PROD = (\n  themeComponentVariablesA: ThemeComponentVariablesInput | undefined,\n  themeComponentVariablesB: ThemeComponentVariablesInput | undefined,\n): ThemeComponentVariablesPrepared => {\n  if (themeComponentVariablesA && themeComponentVariablesB) {\n    const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n    return displayNames.reduce((componentVariables, displayName) => {\n      componentVariables[displayName] = mergeComponentVariables(\n        themeComponentVariablesA[displayName],\n        themeComponentVariablesB[displayName],\n      );\n\n      return componentVariables;\n    }, {});\n  }\n\n  if (themeComponentVariablesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesA).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  if (themeComponentVariablesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentVariablesB).map(([displayName, variables]) => {\n        return [displayName, mergeComponentVariables(undefined, variables)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nexport const mergeThemeVariables__DEV: typeof mergeThemeVariables__PROD = (\n  themeComponentVariablesA,\n  themeComponentVariablesB,\n) => {\n  if (!isDebugEnabled) {\n    return mergeThemeVariables__PROD(themeComponentVariablesA, themeComponentVariablesB);\n  }\n\n  const displayNames = _.union(..._.map([themeComponentVariablesA, themeComponentVariablesB], _.keys));\n\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(\n      themeComponentVariablesA && withDebugId(themeComponentVariablesA[displayName], themeComponentVariablesA._debugId),\n      themeComponentVariablesB && withDebugId(themeComponentVariablesB[displayName], themeComponentVariablesB._debugId),\n    );\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables =\n  process.env.NODE_ENV === 'production' ? mergeThemeVariables__PROD : mergeThemeVariables__DEV;\n\n/**\n * See mergeThemeVariables() description.\n * Component styles adhere to the same pattern as component variables, except\n *   that they return style objects.\n */\nconst mergeThemeStyles__PROD = (\n  themeComponentStylesA: ThemeComponentStylesInput | undefined,\n  themeComponentStylesB: ThemeComponentStylesInput | undefined,\n): ThemeComponentStylesPrepared => {\n  if (themeComponentStylesA && themeComponentStylesB) {\n    const displayNames = _.union(..._.map([themeComponentStylesA, themeComponentStylesB], _.keys));\n\n    return displayNames.reduce((themeComponentStyles, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStylesA[displayName],\n        themeComponentStylesB[displayName],\n      );\n\n      return themeComponentStyles;\n    }, {});\n  }\n\n  if (themeComponentStylesA) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesA).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  if (themeComponentStylesB) {\n    return Object.fromEntries(\n      Object.entries(themeComponentStylesB).map(([displayName, styles]) => {\n        return [displayName, mergeComponentStyles(undefined, styles)];\n      }),\n    );\n  }\n\n  return {};\n};\n\nconst mergeThemeStyles__DEV: typeof mergeThemeStyles__PROD = (componentStylesA, componentStylesB) => {\n  if (!isDebugEnabled) {\n    return mergeThemeStyles__PROD(componentStylesA, componentStylesB);\n  }\n\n  const initial: ThemeComponentStylesPrepared = {};\n\n  return [componentStylesA, componentStylesB].reduce<ThemeComponentStylesPrepared>((themeComponentStyles, next) => {\n    _.forEach(next, (stylesByPart, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStyles[displayName],\n        withDebugId(stylesByPart, (next as ThemeComponentStylesPrepared & { _debugId: string })._debugId),\n      );\n    });\n\n    return themeComponentStyles;\n  }, initial);\n};\n\nexport const mergeThemeStyles = process.env.NODE_ENV === 'production' ? mergeThemeStyles__PROD : mergeThemeStyles__DEV;\n\nexport const mergeFontFaces = (fontFacesA: FontFace[] | undefined, fontFacesB: FontFace[] | undefined): FontFace[] => {\n  return [...(fontFacesA || []), ...(fontFacesB || [])];\n};\n\nexport const mergeStaticStyles = (\n  staticStylesA: StaticStyle[] | undefined,\n  staticStylesB: StaticStyle[] | undefined,\n): StaticStyle[] => {\n  return [...(staticStylesA || []), ...(staticStylesB || [])];\n};\n\nexport const mergeAnimations = (\n  animationsA: { [key: string]: ThemeAnimation } | undefined,\n  animationsB: { [key: string]: ThemeAnimation } | undefined,\n): { [key: string]: ThemeAnimation } => {\n  return { ...animationsA, ...animationsB };\n};\n\nexport const mergeStyles = (...sources: ComponentSlotStyle[]) => {\n  return (...args) => {\n    return sources.reduce((acc, next) => {\n      return _.merge(acc, callable(next)(...args));\n    }, {});\n  };\n};\n\nexport const mergeThemes = (\n  themeA: ThemeInput | ThemePrepared | undefined,\n  themeB: ThemeInput | ThemePrepared | undefined,\n): ThemePrepared => {\n  const debugIdA = themeA?.['_debugId'];\n  const debugIdB = themeB?.['_debugId'];\n\n  if (themeA && themeB) {\n    return {\n      animations: mergeAnimations(themeA.animations, themeB.animations),\n      componentVariables: mergeThemeVariables(\n        withDebugId(themeA.componentVariables, debugIdA),\n        withDebugId(themeB.componentVariables, debugIdB),\n      ),\n      componentStyles: mergeThemeStyles(\n        withDebugId(themeA.componentStyles, debugIdA),\n        withDebugId(themeB.componentStyles, debugIdB),\n      ),\n      fontFaces: mergeFontFaces(themeA.fontFaces, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(\n        withDebugId(themeA.siteVariables, debugIdA),\n        withDebugId(themeB.siteVariables, debugIdB),\n      ),\n      staticStyles: mergeStaticStyles(themeA.staticStyles, themeB.staticStyles),\n    };\n  }\n\n  if (themeA) {\n    return {\n      animations: mergeAnimations(undefined, themeA.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeA.componentVariables, debugIdA)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeA.componentStyles, debugIdA)),\n      fontFaces: mergeFontFaces(undefined, themeA.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeA.siteVariables, debugIdA)),\n      staticStyles: mergeStaticStyles(undefined, themeA.staticStyles),\n    };\n  }\n\n  if (themeB) {\n    return {\n      animations: mergeAnimations(undefined, themeB.animations),\n      componentVariables: mergeThemeVariables(undefined, withDebugId(themeB.componentVariables, debugIdB)),\n      componentStyles: mergeThemeStyles(undefined, withDebugId(themeB.componentStyles, debugIdB)),\n      fontFaces: mergeFontFaces(undefined, themeB.fontFaces),\n      siteVariables: mergeSiteVariables(undefined, withDebugId(themeB.siteVariables, debugIdB)),\n      staticStyles: mergeStaticStyles(undefined, themeB.staticStyles),\n    };\n  }\n\n  return { ...emptyTheme };\n};\n"],"file":"mergeThemes.js"}