"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileTokenStorage = void 0;
const fs = require("fs");
const os = require("os");
const path = require("path");
class FileTokenStorage {
    constructor(filePath) {
        this.filePath = filePath;
    }
    static msalCacheFilePath() {
        return path.join(os.homedir(), '.cli-m365-msal.json');
    }
    static connectionInfoFilePath() {
        return path.join(os.homedir(), '.cli-m365-tokens.json');
    }
    get() {
        return new Promise((resolve, reject) => {
            if (!fs.existsSync(this.filePath)) {
                reject('File not found');
                return;
            }
            const contents = fs.readFileSync(this.filePath, 'utf8');
            resolve(contents);
        });
    }
    set(connectionInfo) {
        return new Promise((resolve, reject) => {
            fs.writeFile(this.filePath, connectionInfo, 'utf8', (err) => {
                if (err) {
                    reject(err.message);
                }
                else {
                    resolve();
                }
            });
        });
    }
    remove() {
        return new Promise((resolve, reject) => {
            if (!fs.existsSync(this.filePath)) {
                resolve();
                return;
            }
            fs.writeFile(this.filePath, '', 'utf8', (err) => {
                if (err) {
                    reject(err.message);
                }
                else {
                    resolve();
                }
            });
        });
    }
}
exports.FileTokenStorage = FileTokenStorage;
//# sourceMappingURL=FileTokenStorage.js.map