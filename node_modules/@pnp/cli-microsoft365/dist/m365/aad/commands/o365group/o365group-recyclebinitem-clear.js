"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AadO365GroupRecycleBinItemClearCommand_instances, _AadO365GroupRecycleBinItemClearCommand_initTelemetry, _AadO365GroupRecycleBinItemClearCommand_initOptions;
Object.defineProperty(exports, "__esModule", { value: true });
const Cli_1 = require("../../../../cli/Cli");
const request_1 = require("../../../../request");
const odata_1 = require("../../../../utils/odata");
const GraphCommand_1 = require("../../../base/GraphCommand");
const commands_1 = require("../../commands");
class AadO365GroupRecycleBinItemClearCommand extends GraphCommand_1.default {
    constructor() {
        super();
        _AadO365GroupRecycleBinItemClearCommand_instances.add(this);
        __classPrivateFieldGet(this, _AadO365GroupRecycleBinItemClearCommand_instances, "m", _AadO365GroupRecycleBinItemClearCommand_initTelemetry).call(this);
        __classPrivateFieldGet(this, _AadO365GroupRecycleBinItemClearCommand_instances, "m", _AadO365GroupRecycleBinItemClearCommand_initOptions).call(this);
    }
    get name() {
        return commands_1.default.O365GROUP_RECYCLEBINITEM_CLEAR;
    }
    get description() {
        return 'Clears all O365 Groups from recycle bin.';
    }
    commandAction(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            const clearO365GroupRecycleBinItems = () => __awaiter(this, void 0, void 0, function* () {
                try {
                    yield this.processRecycleBinItemsClear();
                }
                catch (err) {
                    this.handleRejectedODataJsonPromise(err);
                }
            });
            if (args.options.confirm) {
                yield clearO365GroupRecycleBinItems();
            }
            else {
                const response = yield Cli_1.Cli.prompt({
                    type: 'confirm',
                    name: 'continue',
                    default: false,
                    message: `Are you sure you want to clear all O365 Groups from recycle bin ?`
                });
                if (response.continue) {
                    yield clearO365GroupRecycleBinItems();
                }
            }
        });
    }
    processRecycleBinItemsClear() {
        const filter = `?$filter=groupTypes/any(c:c+eq+'Unified')`;
        const topCount = '&$top=100';
        const endpoint = `${this.resource}/v1.0/directory/deletedItems/Microsoft.Graph.Group${filter}${topCount}`;
        return odata_1.odata
            .getAllItems(endpoint)
            .then((recycleBinItems) => {
            if (recycleBinItems.length === 0) {
                return Promise.resolve();
            }
            const deletePromises = [];
            // Logic to delete a group from recycle bin items.
            recycleBinItems.forEach(grp => {
                deletePromises.push(request_1.default.delete({
                    url: `${this.resource}/v1.0/directory/deletedItems/${grp.id}`,
                    headers: {
                        'accept': 'application/json;odata.metadata=none'
                    }
                }));
            });
            return Promise.all(deletePromises);
        });
    }
}
_AadO365GroupRecycleBinItemClearCommand_instances = new WeakSet(), _AadO365GroupRecycleBinItemClearCommand_initTelemetry = function _AadO365GroupRecycleBinItemClearCommand_initTelemetry() {
    this.telemetry.push((args) => {
        Object.assign(this.telemetryProperties, {
            confirm: typeof args.options.confirm !== 'undefined'
        });
    });
}, _AadO365GroupRecycleBinItemClearCommand_initOptions = function _AadO365GroupRecycleBinItemClearCommand_initOptions() {
    this.options.unshift({
        option: '--confirm'
    });
};
module.exports = new AadO365GroupRecycleBinItemClearCommand();
//# sourceMappingURL=o365group-recyclebinitem-clear.js.map