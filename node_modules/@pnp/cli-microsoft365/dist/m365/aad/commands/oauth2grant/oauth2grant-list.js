"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AadOAuth2GrantListCommand_instances, _AadOAuth2GrantListCommand_initOptions, _AadOAuth2GrantListCommand_initValidators;
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const validation_1 = require("../../../../utils/validation");
const GraphCommand_1 = require("../../../base/GraphCommand");
const commands_1 = require("../../commands");
class AadOAuth2GrantListCommand extends GraphCommand_1.default {
    constructor() {
        super();
        _AadOAuth2GrantListCommand_instances.add(this);
        __classPrivateFieldGet(this, _AadOAuth2GrantListCommand_instances, "m", _AadOAuth2GrantListCommand_initOptions).call(this);
        __classPrivateFieldGet(this, _AadOAuth2GrantListCommand_instances, "m", _AadOAuth2GrantListCommand_initValidators).call(this);
    }
    get name() {
        return commands_1.default.OAUTH2GRANT_LIST;
    }
    get description() {
        return 'Lists OAuth2 permission grants for the specified service principal';
    }
    defaultProperties() {
        return ['objectId', 'resourceId', 'scope'];
    }
    commandAction(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.verbose) {
                logger.logToStderr(`Retrieving list of OAuth grants for the service principal...`);
            }
            try {
                const requestOptions = {
                    url: `${this.resource}/v1.0/oauth2PermissionGrants?$filter=clientId eq '${encodeURIComponent(args.options.spObjectId)}'`,
                    headers: {
                        accept: 'application/json;odata.metadata=none'
                    },
                    responseType: 'json'
                };
                const res = yield request_1.default.get(requestOptions);
                if (res.value && res.value.length > 0) {
                    logger.log(res.value);
                }
            }
            catch (err) {
                this.handleRejectedODataJsonPromise(err);
            }
        });
    }
}
_AadOAuth2GrantListCommand_instances = new WeakSet(), _AadOAuth2GrantListCommand_initOptions = function _AadOAuth2GrantListCommand_initOptions() {
    this.options.unshift({
        option: '-i, --spObjectId <spObjectId>'
    });
}, _AadOAuth2GrantListCommand_initValidators = function _AadOAuth2GrantListCommand_initValidators() {
    this.validators.push((args) => __awaiter(this, void 0, void 0, function* () {
        if (!validation_1.validation.isValidGuid(args.options.spObjectId)) {
            return `${args.options.spObjectId} is not a valid GUID`;
        }
        return true;
    }));
};
module.exports = new AadOAuth2GrantListCommand();
//# sourceMappingURL=oauth2grant-list.js.map