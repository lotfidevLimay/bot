"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileAddRemoveRule = void 0;
const fs = require("fs");
const path = require("path");
const Rule_1 = require("../../Rule");
class FileAddRemoveRule extends Rule_1.Rule {
    constructor(filePath, add, contents) {
        super();
        this.filePath = filePath;
        this.add = add;
        this.contents = contents;
        this.filePath = path.normalize(this.filePath);
    }
    get title() {
        return this.filePath;
    }
    get description() {
        return `${this.add ? 'Add' : 'Remove'} file ${this.filePath}`;
    }
    get resolution() {
        if (this.add) {
            return `add_cmd[BEFOREPATH]"${this.filePath}"[AFTERPATH][BEFORECONTENT]
${this.contents}
[AFTERCONTENT]`;
        }
        else {
            return `remove_cmd "${this.filePath}"`;
        }
    }
    get resolutionType() {
        return 'cmd';
    }
    get severity() {
        return 'Required';
    }
    get file() {
        return this.filePath;
    }
    visit(project, notifications) {
        const targetPath = path.join(project.path, this.filePath);
        if ((!this.add && fs.existsSync(targetPath)) ||
            (this.add && !fs.existsSync(targetPath))) {
            this.addFinding(notifications);
        }
    }
}
exports.FileAddRemoveRule = FileAddRemoveRule;
//# sourceMappingURL=FileAddRemoveRule.js.map