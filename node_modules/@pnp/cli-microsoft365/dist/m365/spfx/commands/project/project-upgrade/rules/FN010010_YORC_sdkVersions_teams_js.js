"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FN010010_YORC_sdkVersions_teams_js = void 0;
const JsonRule_1 = require("../../JsonRule");
class FN010010_YORC_sdkVersions_teams_js extends JsonRule_1.JsonRule {
    constructor(version) {
        super();
        this.version = version;
    }
    get id() {
        return 'FN010010';
    }
    get title() {
        return '.yo-rc.json @microsoft/teams-js SDK version';
    }
    get description() {
        return `Update @microsoft/teams-js SDK version in .yo-rc.json`;
    }
    get resolution() {
        return `{
  "@microsoft/generator-sharepoint": {
    "sdkVersions": {
      "@microsoft/teams-js": "${this.version}"
    }
  }
}`;
    }
    get resolutionType() {
        return 'json';
    }
    get severity() {
        return 'Recommended';
    }
    get file() {
        return './.yo-rc.json';
    }
    visit(project, findings) {
        var _a, _b, _c;
        if (!project.yoRcJson) {
            return;
        }
        if (((_b = (_a = project.yoRcJson["@microsoft/generator-sharepoint"]) === null || _a === void 0 ? void 0 : _a.sdkVersions) === null || _b === void 0 ? void 0 : _b['@microsoft/teams-js']) !== this.version) {
            let nodePath = '@microsoft/generator-sharepoint';
            if ((_c = project.yoRcJson["@microsoft/generator-sharepoint"]) === null || _c === void 0 ? void 0 : _c.sdkVersions) {
                nodePath += '.sdkVersions';
                if (project.yoRcJson["@microsoft/generator-sharepoint"].sdkVersions['@microsoft/teams-js']) {
                    nodePath += '.@microsoft/teams-js';
                }
            }
            const node = this.getAstNodeFromFile(project.yoRcJson, nodePath);
            this.addFindingWithPosition(findings, node);
        }
    }
}
exports.FN010010_YORC_sdkVersions_teams_js = FN010010_YORC_sdkVersions_teams_js;
//# sourceMappingURL=FN010010_YORC_sdkVersions_teams_js.js.map