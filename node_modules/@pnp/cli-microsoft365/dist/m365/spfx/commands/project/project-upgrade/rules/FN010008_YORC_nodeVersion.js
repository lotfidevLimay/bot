"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FN010008_YORC_nodeVersion = void 0;
const JsonRule_1 = require("../../JsonRule");
const process = require("process");
class FN010008_YORC_nodeVersion extends JsonRule_1.JsonRule {
    constructor() {
        super();
    }
    get id() {
        return 'FN010008';
    }
    get title() {
        return '.yo-rc.json nodeVersion';
    }
    get description() {
        return `Update nodeVersion in .yo-rc.json`;
    }
    get resolution() {
        return `{
  "@microsoft/generator-sharepoint": {
    "nodeVersion": "${process.version.substring(1)}"
  }
}`;
    }
    get resolutionType() {
        return 'json';
    }
    get severity() {
        return 'Recommended';
    }
    get file() {
        return './.yo-rc.json';
    }
    visit(project, findings) {
        var _a;
        if (!project.yoRcJson) {
            return;
        }
        const nodeVersion = process.version.substring(1);
        if (((_a = project.yoRcJson["@microsoft/generator-sharepoint"]) === null || _a === void 0 ? void 0 : _a.nodeVersion) !== nodeVersion) {
            const node = this.getAstNodeFromFile(project.yoRcJson, '@microsoft/generator-sharepoint.nodeVersion');
            this.addFindingWithPosition(findings, node);
        }
    }
}
exports.FN010008_YORC_nodeVersion = FN010008_YORC_nodeVersion;
//# sourceMappingURL=FN010008_YORC_nodeVersion.js.map