"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FN021003_PKG_spfx_deps_installed_as_deps = void 0;
const JsonRule_1 = require("../../JsonRule");
const spfxDeps = require("../spfx-deps");
class FN021003_PKG_spfx_deps_installed_as_deps extends JsonRule_1.JsonRule {
    get id() {
        return 'FN021003';
    }
    get title() {
        return '';
    }
    get description() {
        return '';
    }
    get severity() {
        return 'Required';
    }
    get file() {
        return './package.json';
    }
    get resolutionType() {
        return 'cmd';
    }
    visit(project, findings) {
        if (!project.version ||
            !project.packageJson ||
            !project.packageJson.devDependencies) {
            return;
        }
        const projectDevDeps = Object.keys(project.packageJson.devDependencies);
        projectDevDeps.forEach(dep => {
            if (!spfxDeps.deps.includes(dep)) {
                return;
            }
            const node = this.getAstNodeFromFile(project.packageJson, `devDependencies.${dep}`);
            this.addFindingWithCustomInfo(`${dep} installed as devDependency`, `Package ${dep} is installed as a devDependency. Install it as a dependency instead`, [{
                    file: this.file,
                    resolution: `install ${dep}@${project.version}`,
                    position: this.getPositionFromNode(node)
                }], findings);
        });
    }
}
exports.FN021003_PKG_spfx_deps_installed_as_deps = FN021003_PKG_spfx_deps_installed_as_deps;
//# sourceMappingURL=FN021003_PKG_spfx_deps_installed_as_deps.js.map