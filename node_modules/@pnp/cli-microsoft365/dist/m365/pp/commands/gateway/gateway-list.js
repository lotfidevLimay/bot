"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const PowerBICommand_1 = require("../../../base/PowerBICommand");
const commands_1 = require("../../commands");
class PpGatewayListCommand extends PowerBICommand_1.default {
    get name() {
        return commands_1.default.GATEWAY_LIST;
    }
    get description() {
        return 'Returns a list of gateways for which the user is an admin';
    }
    defaultProperties() {
        return ['id', 'name'];
    }
    commandAction(logger) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.verbose) {
                logger.logToStderr(`Retrieving list of gateways for which the user is an admin...`);
            }
            const requestOptions = {
                url: `${this.resource}/v1.0/myorg/gateways`,
                headers: {
                    accept: 'application/json;odata.metadata=none'
                },
                responseType: 'json'
            };
            try {
                const res = yield request_1.default.get(requestOptions);
                logger.log(res.value);
            }
            catch (err) {
                this.handleRejectedODataJsonPromise(err);
            }
        });
    }
}
module.exports = new PpGatewayListCommand();
//# sourceMappingURL=gateway-list.js.map