"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const odata_1 = require("../../../../utils/odata");
const GraphCommand_1 = require("../../../base/GraphCommand");
const commands_1 = require("../../commands");
class BookingBusinessListCommand extends GraphCommand_1.default {
    get name() {
        return commands_1.default.BUSINESS_LIST;
    }
    get description() {
        return 'Lists all Microsoft Bookings businesses that are created for the tenant.';
    }
    defaultProperties() {
        return ['id', 'displayName'];
    }
    commandAction(logger) {
        return __awaiter(this, void 0, void 0, function* () {
            const endpoint = `${this.resource}/v1.0/solutions/bookingBusinesses`;
            try {
                const items = yield odata_1.odata.getAllItems(endpoint);
                logger.log(items);
            }
            catch (err) {
                this.handleRejectedODataJsonPromise(err);
            }
        });
    }
}
module.exports = new BookingBusinessListCommand();
//# sourceMappingURL=business-list.js.map