"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SpoAppInStanceListCommand_instances, _SpoAppInStanceListCommand_initOptions, _SpoAppInStanceListCommand_initValidators;
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("../../../../request");
const validation_1 = require("../../../../utils/validation");
const commands_1 = require("../../commands");
const SpoAppBaseCommand_1 = require("./SpoAppBaseCommand");
class SpoAppInStanceListCommand extends SpoAppBaseCommand_1.SpoAppBaseCommand {
    constructor() {
        super();
        _SpoAppInStanceListCommand_instances.add(this);
        __classPrivateFieldGet(this, _SpoAppInStanceListCommand_instances, "m", _SpoAppInStanceListCommand_initOptions).call(this);
        __classPrivateFieldGet(this, _SpoAppInStanceListCommand_instances, "m", _SpoAppInStanceListCommand_initValidators).call(this);
    }
    get name() {
        return commands_1.default.APP_INSTANCE_LIST;
    }
    get description() {
        return 'Retrieve apps installed in a site';
    }
    defaultProperties() {
        return [`Title`, `AppId`];
    }
    commandAction(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.verbose) {
                logger.logToStderr(`Retrieving installed apps in site at ${args.options.siteUrl}...`);
            }
            const requestOptions = {
                url: `${args.options.siteUrl}/_api/web/AppTiles?$filter=AppType eq 3`,
                method: 'GET',
                headers: {
                    'accept': 'application/json;odata=nometadata'
                },
                responseType: 'json'
            };
            try {
                const apps = yield request_1.default.get(requestOptions);
                if (apps.value && apps.value.length > 0) {
                    logger.log(apps.value);
                }
                else {
                    if (this.verbose) {
                        logger.logToStderr('No apps found');
                    }
                }
            }
            catch (err) {
                this.handleRejectedODataJsonPromise(err);
            }
        });
    }
}
_SpoAppInStanceListCommand_instances = new WeakSet(), _SpoAppInStanceListCommand_initOptions = function _SpoAppInStanceListCommand_initOptions() {
    this.options.unshift({
        option: '-u, --siteUrl <siteUrl>'
    });
}, _SpoAppInStanceListCommand_initValidators = function _SpoAppInStanceListCommand_initValidators() {
    this.validators.push((args) => __awaiter(this, void 0, void 0, function* () {
        const isValidSharePointUrl = validation_1.validation.isValidSharePointUrl(args.options.siteUrl);
        if (isValidSharePointUrl !== true) {
            return isValidSharePointUrl;
        }
        return true;
    }));
};
module.exports = new SpoAppInStanceListCommand();
//# sourceMappingURL=app-instance-list.js.map