"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SpoHubSiteRightsGrantCommand_instances, _SpoHubSiteRightsGrantCommand_initOptions, _SpoHubSiteRightsGrantCommand_initValidators;
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../../../../config");
const request_1 = require("../../../../request");
const formatting_1 = require("../../../../utils/formatting");
const spo_1 = require("../../../../utils/spo");
const validation_1 = require("../../../../utils/validation");
const SpoCommand_1 = require("../../../base/SpoCommand");
const commands_1 = require("../../commands");
class SpoHubSiteRightsGrantCommand extends SpoCommand_1.default {
    constructor() {
        super();
        _SpoHubSiteRightsGrantCommand_instances.add(this);
        __classPrivateFieldGet(this, _SpoHubSiteRightsGrantCommand_instances, "m", _SpoHubSiteRightsGrantCommand_initOptions).call(this);
        __classPrivateFieldGet(this, _SpoHubSiteRightsGrantCommand_instances, "m", _SpoHubSiteRightsGrantCommand_initValidators).call(this);
    }
    get name() {
        return commands_1.default.HUBSITE_RIGHTS_GRANT;
    }
    get description() {
        return 'Grants permissions to join the hub site for one or more principals';
    }
    commandAction(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const spoAdminUrl = yield spo_1.spo.getSpoAdminUrl(logger, this.debug);
                const reqDigest = yield spo_1.spo.getRequestDigest(spoAdminUrl);
                if (this.verbose) {
                    logger.logToStderr(`Granting permissions to join the hub site ${args.options.url} to principals ${args.options.principals}...`);
                }
                const principals = args.options.principals
                    .split(',')
                    .map(p => `<Object Type="String">${formatting_1.formatting.escapeXml(p.trim())}</Object>`)
                    .join('');
                const grantedRights = '1';
                const requestOptions = {
                    url: `${spoAdminUrl}/_vti_bin/client.svc/ProcessQuery`,
                    headers: {
                        'X-RequestDigest': reqDigest.FormDigestValue
                    },
                    data: `<Request AddExpandoFieldTypeSuffix="true" SchemaVersion="15.0.0.0" LibraryVersion="16.0.0.0" ApplicationName="${config_1.default.applicationName}" xmlns="http://schemas.microsoft.com/sharepoint/clientquery/2009"><Actions><ObjectPath Id="37" ObjectPathId="36" /><Method Name="GrantHubSiteRights" Id="38" ObjectPathId="36"><Parameters><Parameter Type="String">${formatting_1.formatting.escapeXml(args.options.url)}</Parameter><Parameter Type="Array">${principals}</Parameter><Parameter Type="Enum">${grantedRights}</Parameter></Parameters></Method></Actions><ObjectPaths><Constructor Id="36" TypeId="{268004ae-ef6b-4e9b-8425-127220d84719}" /></ObjectPaths></Request>`
                };
                const res = yield request_1.default.post(requestOptions);
                const json = JSON.parse(res);
                const response = json[0];
                if (response.ErrorInfo) {
                    throw response.ErrorInfo.ErrorMessage;
                }
            }
            catch (err) {
                this.handleRejectedPromise(err);
            }
        });
    }
}
_SpoHubSiteRightsGrantCommand_instances = new WeakSet(), _SpoHubSiteRightsGrantCommand_initOptions = function _SpoHubSiteRightsGrantCommand_initOptions() {
    this.options.unshift({
        option: '-u, --url <url>'
    }, {
        option: '-p, --principals <principals>'
    }, {
        option: '-r, --rights <rights>',
        autocomplete: ['Join']
    });
}, _SpoHubSiteRightsGrantCommand_initValidators = function _SpoHubSiteRightsGrantCommand_initValidators() {
    this.validators.push((args) => __awaiter(this, void 0, void 0, function* () {
        const isValidSharePointUrl = validation_1.validation.isValidSharePointUrl(args.options.url);
        if (isValidSharePointUrl !== true) {
            return isValidSharePointUrl;
        }
        if (args.options.rights !== 'Join') {
            return `${args.options.rights} is not a valid rights value. Allowed values Join`;
        }
        return true;
    }));
};
module.exports = new SpoHubSiteRightsGrantCommand();
//# sourceMappingURL=hubsite-rights-grant.js.map