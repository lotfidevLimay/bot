"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Auth_1 = require("../../Auth");
const Command_1 = require("../../Command");
const commands_1 = require("./commands");
class LogoutCommand extends Command_1.default {
    get name() {
        return commands_1.default.LOGOUT;
    }
    get description() {
        return 'Log out from Microsoft 365';
    }
    commandAction(logger) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.verbose) {
                logger.logToStderr('Logging out from Microsoft 365...');
            }
            const logout = () => Auth_1.default.service.logout();
            try {
                yield Auth_1.default.clearConnectionInfo();
            }
            catch (error) {
                if (this.debug) {
                    logger.logToStderr(new Command_1.CommandError(error));
                }
            }
            finally {
                logout();
            }
        });
    }
    action(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield Auth_1.default.restoreAuth();
            }
            catch (error) {
                throw new Command_1.CommandError(error);
            }
            this.initAction(args, logger);
            this.commandAction(logger);
        });
    }
}
module.exports = new LogoutCommand();
//# sourceMappingURL=logout.js.map