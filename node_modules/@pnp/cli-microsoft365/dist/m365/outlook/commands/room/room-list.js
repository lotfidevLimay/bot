"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _OutlookRoomListCommand_instances, _OutlookRoomListCommand_initTelemetry, _OutlookRoomListCommand_initOptions;
Object.defineProperty(exports, "__esModule", { value: true });
const odata_1 = require("../../../../utils/odata");
const GraphCommand_1 = require("../../../base/GraphCommand");
const commands_1 = require("../../commands");
class OutlookRoomListCommand extends GraphCommand_1.default {
    constructor() {
        super();
        _OutlookRoomListCommand_instances.add(this);
        __classPrivateFieldGet(this, _OutlookRoomListCommand_instances, "m", _OutlookRoomListCommand_initTelemetry).call(this);
        __classPrivateFieldGet(this, _OutlookRoomListCommand_instances, "m", _OutlookRoomListCommand_initOptions).call(this);
    }
    get name() {
        return commands_1.default.ROOM_LIST;
    }
    get description() {
        return 'Get a collection of all available rooms';
    }
    defaultProperties() {
        return ['id', 'displayName', 'phone', 'emailAddress'];
    }
    commandAction(logger, args) {
        return __awaiter(this, void 0, void 0, function* () {
            let endpoint = `${this.resource}/v1.0/places/microsoft.graph.room`;
            if (args.options.roomlistEmail) {
                endpoint = `${this.resource}/v1.0/places/${args.options.roomlistEmail}/microsoft.graph.roomlist/rooms`;
            }
            try {
                const rooms = yield odata_1.odata.getAllItems(endpoint);
                logger.log(rooms);
            }
            catch (err) {
                this.handleRejectedODataJsonPromise(err);
            }
        });
    }
}
_OutlookRoomListCommand_instances = new WeakSet(), _OutlookRoomListCommand_initTelemetry = function _OutlookRoomListCommand_initTelemetry() {
    this.telemetry.push((args) => {
        Object.assign(this.telemetryProperties, {
            roomlistEmail: typeof args.options.roomlistEmail !== 'undefined'
        });
    });
}, _OutlookRoomListCommand_initOptions = function _OutlookRoomListCommand_initOptions() {
    this.options.unshift({
        option: '--roomlistEmail [roomlistEmail]'
    });
};
module.exports = new OutlookRoomListCommand();
//# sourceMappingURL=room-list.js.map